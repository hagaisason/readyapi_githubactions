<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="b0f6c766-d79f-497c-8851-66703d618b2f" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="[Test] [OTA-19176] Required parameters for Kibana" searchProperties="true" timeout="0" disabled="true" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="d068ce1d-8779-472c-95fc-87538079bbfbfileName">%5BTest%5D-%5BOTA-19176%5D-Required-parameters-for-Kibana</con:setting>
    <con:setting id="b0f6c766-d79f-497c-8851-66703d618b2ffileName">%5BTest%5D-%5BOTA-19176%5D-Required-parameters-for-Kibana</con:setting>
  </con:settings>
  <con:testStep type="groovy" name="[Pre-Condition] Generate Access Token For Technical User" id="1e4d6c70-7843-4e47-887a-66df0eab327a">
    <con:settings/>
    <con:config>
      <script><![CDATA[import groovy.json.JsonSlurper
import com.eviware.soapui.support.GroovyUtils
import org.apache.http.client.methods.CloseableHttpResponse
import org.apache.http.client.methods.HttpPost
import org.apache.http.entity.StringEntity
import org.apache.http.impl.client.CloseableHttpClient
import org.apache.http.impl.client.HttpClients
import org.apache.http.ssl.SSLContextBuilder
import org.apache.http.util.EntityUtils
import java.nio.file.Files
import java.nio.file.Paths
import java.security.KeyFactory
import java.security.KeyStore
import java.security.cert.CertificateFactory
import java.security.spec.PKCS8EncodedKeySpec
import java.util.Base64
import java.security.cert.X509Certificate
import javax.net.ssl.SSLContext
import javax.net.ssl.TrustManager
import javax.net.ssl.X509TrustManager
import org.apache.http.conn.ssl.TrustSelfSignedStrategy

//declare paths to certificate and private key files, as well as the needed authorization inputs
def path = new GroovyUtils(context).getProjectPath() +"/Certificates/"
def certPath = path + "certificate.pem"
def keyPath = path + "private.key"
def username = context.expand( '${#Global#TechUser_username}' )
def password = context.expand( '${#Global#TechUser_password}' )
def clientId = context.expand( '${#Global#TechUser_clientId}' )
def clientSecret = context.expand( '${#Global#TechUser_clientSecret}' )

//log the values for the needed inputs
log.info("Cert Path: " + certPath)
log.info("Key Path: " + keyPath)
log.info("Username: " + username)
log.info("Password: " + password)
log.info("ClientId: " + clientId)
log.info("ClientSecret: " + clientSecret)

//load the certificate
def certInputStream = new FileInputStream(certPath)
def certificateFactory = CertificateFactory.getInstance("X.509")
def cert = certificateFactory.generateCertificate(certInputStream) as X509Certificate
certInputStream.close()

//load the private key
def privateKeyPEM = new String(Files.readAllBytes(Paths.get(keyPath)))
privateKeyPEM = privateKeyPEM.substring(privateKeyPEM.indexOf('-----BEGIN PRIVATE KEY-----') + 27, privateKeyPEM.indexOf('-----END PRIVATE KEY-----')).replaceAll("\\s", "")

//decode the base64 private key
def decoded = Base64.getDecoder().decode(privateKeyPEM)
def spec = new PKCS8EncodedKeySpec(decoded)
def keyFactory = KeyFactory.getInstance("RSA")
def privateKey = keyFactory.generatePrivate(spec)

//create a KeyStore and load the certificate and private key
def keyStore = KeyStore.getInstance(KeyStore.getDefaultType())
keyStore.load(null, null)
keyStore.setCertificateEntry("cert", cert)
keyStore.setKeyEntry("key", privateKey, new char[0], [cert] as java.security.cert.Certificate[])

//create an SSL context with the KeyStore
def sslContext = SSLContextBuilder.create()
                                  .loadKeyMaterial(keyStore, null)
                                  .loadTrustMaterial(new TrustSelfSignedStrategy())
                                  .build()

//create an HTTP client with the SSL context
CloseableHttpClient httpClient = HttpClients.custom()
                                            .setSSLContext(sslContext)
                                            .build()

//create the HTTP POST request
HttpPost httpPost = new HttpPost("https://idp.cloud.vwgroup.com/auth/realms/kums-mfa/protocol/openid-connect/token")
httpPost.setHeader("Content-Type", "application/x-www-form-urlencoded")

//add form parameters to the request
StringEntity entity = new StringEntity("grant_type=password&scope=openid&username=" + username +  "&password=" + password +  "&client_id=" + clientId + "&client_secret=" + clientSecret)
httpPost.setEntity(entity)

//execute the request
CloseableHttpResponse response = httpClient.execute(httpPost)
try {
    //get the response body
    String responseBody = EntityUtils.toString(response.getEntity())
    log.info("Response status: ${response.getStatusLine().getStatusCode()}")
    log.info("Response body: ${responseBody}")

    //parse the JSON response
    def jsonSlurper = new JsonSlurper()
    def jsonResponse = jsonSlurper.parseText(responseBody)

    //extract the access_token
    def accessToken = jsonResponse.access_token
    log.info("Access Token: ${accessToken}")

    //set test case level property storing the value for Code
	context.testCase.setPropertyValue("accessToken", accessToken)
	log.info("Property  <<accessToken>> was set at test case level with value <<" + accessToken + ">>")
} finally {
    response.close()
    httpClient.close()
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2660] [1] [Set-Up] Change Measure is created - Generate Change Measure Input Data" id="2a07ff90-a488-4d2f-829a-f3a4faddab3a">
    <con:settings/>
    <con:config>
      <script>import java.text.SimpleDateFormat

//declare variable for Code
String code = "ACM" + new SimpleDateFormat("yyyyMMddHHmmss").format(new Date()).toString()

//set test case level property storing the value for Code
context.testCase.setPropertyValue("code", code)
log.info("Property  &lt;&lt;code>> was set at test case level with value &lt;&lt;" + code + ">>")</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2660] [2] Change Measure is created" id="05a83d71-23f4-438e-acd3-735f1c755a5a">
    <con:settings/>
    <con:config service="VW Group Services Mock" methodName="createChangeMeasure" resourcePath="/change_measures" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2660] [2] Change Measure is created" id="75c0ca32-7f8e-4e69-80fa-b7c9eff7610c" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://demo.orunext.com</con:endpoint>
        <con:request>{
   "code":"${#TestCase#code}",
   "containers":[
      
   ],
   "description":"Change Measure created through an API call.",
   "ota_description":"Change Measure created through an API call.",
   "status":"ACTIVE"
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/change_measures</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="bf781d36-66e5-4a48-b966-4af2746b0dca" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Mon, 06 Nov 2023 12:43:21 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Mon, 06 Nov 2023 12:43:21 GMT","content-length":"0","expires":"0","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2661] [1] [Set-Up] Vehicle is created - Generate Vehicle Input Data" id="8e08bddc-e09f-4c90-8bdf-a3896033a936">
    <con:settings/>
    <con:config>
      <script><![CDATA[import java.text.SimpleDateFormat
import java.util.Random

//declare variables for VIN, PKN, Model Name and Creation Date
String vin = "AMV" + new SimpleDateFormat("yyyyMMddHHmmss").format(new Date()).toString()
String pkn = new Random().nextInt(9 - 0 + 1) + 0 + new SimpleDateFormat("HHmmss").format(new Date()).toString()
String[] models =  ["A3", "A4", "A5", "S3", "Q7", "Q5", "TT", "Q4 e-tron", "SQ5", "Q8", "SQ8", "e-tron S"]
String modelName = models[new Random().nextInt(models.length)]
String vCreationDate = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SS'Z'").format(new Date()).toString()

//set test case level properties storing the values for VIN, PKN, Model Name and Creation Date
context.testCase.setPropertyValue("vin", vin)
log.info("Property  <<vin>> was set at test case level with value <<" + vin + ">>")
context.testCase.setPropertyValue("pkn", pkn)
log.info("Property  <<pkn>> was set at test case level with value <<" + pkn + ">>")
context.testCase.setPropertyValue("modelName", modelName)
log.info("Property  <<modelName>> was set at test case level with value <<" + modelName + ">>")
context.testCase.setPropertyValue("vCreationDate", vCreationDate)
log.info("Property  <<vCeationDate>> was set at test case level with value <<" + vCreationDate + ">>")]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2661] [2] Vehicle is created" id="42d590d1-1e0e-4029-b773-6171ae7291bb">
    <con:settings/>
    <con:config service="VW Group Services Mock" resourcePath="/vehicles" methodName="createFakeVehicle" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2661] [2] Vehicle is created" id="7942e665-7973-4849-b445-576cdb85f772" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com/api/vw-group-services-mock</con:endpoint>
        <con:request>{
   "vin":"${#TestCase#vin}",
   "mbv_model_code":"4N803A",
   "mbt_model_code":"4N42",
   "brand_code":"A",
   "creation_date":"${#TestCase#vCreationDate}",
   "pkn":"${#TestCase#pkn}",
   "delivering_dealer":"125",
   "supervising_dealer":"CHN79601076",
   "ordering_dealer":"CHN79601061",
   "equipment_codes":[
      "0K4"
   ],
   "model_year":2021,
   "model_name":"${#TestCase#modelName}",
   "oru_relevant":true,
   "oru_relevant_date":"${#TestCase#vCreationDate}",
   "update_status":"CUSTOMER_NOTIFIED"
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/vehicles</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="6b953d8a-d029-4e77-bbd5-786e6dd32eaf" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Mon, 06 Nov 2023 13:52:31 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Mon, 06 Nov 2023 13:52:31 GMT","content-length":"0","expires":"0","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>ORU-demo</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2662] [1] [Set-Up] ReCall action is created - Search For Mock ReCall Action" id="43649900-0fb7-491e-b905-1e04f82d8b9f" disabled="true">
    <con:settings/>
    <con:config service="VW Group Services Mock" resourcePath="/campaigns/searches" methodName="searchRecallActions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2662] [1] [Set-Up] ReCall action is created - Search For Mock ReCall Action" id="e3c51dc5-9ae6-4df2-a374-b5758e156b18" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com/api/vw-group-services-mock</con:endpoint>
        <con:request>{
   "columns":[
      "campaignId",
      "title",
      "creationDate"
   ],
   "columnConditions":[
      {
         "column":"campaignId",
         "operator":"containsIgnoringCase",
         "value":"${#TestCase#campaignID}"
      }
   ],
   "sortDirection":"asc",
   "limit":1,
   "count":true,
   "start":0,
   "sortBy":"campaignId"
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/campaigns/searches</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="24a37b51-4437-4a35-aa1a-79ee902e4412" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Mon, 13 Nov 2023 14:43:35 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1; mode=block</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Mon, 13 Nov 2023 14:43:35 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 400 Bad Request","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="08fd2805-a4bb-4c44-ae16-67b87e6d85fe" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Mon, 13 Nov 2023 14:43:35 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1; mode=block</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Mon, 13 Nov 2023 14:43:35 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 400 Bad Request","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2662] [2] [Set-Up] ReCall action is created - Generate ReCall Action Input Data" id="55d03df8-2bc4-44ce-b1ff-f0ef9045b766">
    <con:settings/>
    <con:config>
      <script><![CDATA[import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//declare variables for date format
def seconds  = new SimpleDateFormat("ss")

//declare variables for Campaign ID, Criterion and Creation Date
String criterion = seconds.format(new Date()).toString()
String campaignID = "AR" + criterion
String raCreationDate = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SS'Z'").format(new Date()).toString()

//declare variable for API call name
String apiCallName = "[Pre-Condition] [OTA-2662] [1] [Set-Up] ReCall action is created - Search For Mock ReCall Action"

//run disabled set-up test step to search for ReCall Action
runTestCase(apiCallName)

//declare variable for the size of the ReCall Actions returned by the API call
int responseBodySize = responseBody(apiCallName).size

//while the response body size is 1, meaning the ReCall Action already exists, repeat the process
while (responseBodySize == 1) {
	log.info("Validation for mock ReCall Action existence failed succeeded.")
	log.info("Generating a new values for Criterion and Campaign ID...")
	criterion = seconds.format(new Date()).toString()
	campaignID = "AR" + criterion
	context.testCase.setPropertyValue("campaignID", campaignID)
	log.info("Repeating validation for the new values...")
	runTestCase(apiCallName)
	responseBodySize = responseBody(apiCallName).size
}

//set test case level properties storing the values for Campaign ID, Criterion and Creation Date
context.testCase.setPropertyValue("campaignID", campaignID)
log.info("Property  <<campaignID>> was set at test case level with value <<" + campaignID + ">>")
context.testCase.setPropertyValue("criterion", criterion)
log.info("Property  <<criterion>> was set at test case level with value <<" + criterion + ">>")
context.testCase.setPropertyValue("raCreationDate", raCreationDate)
log.info("Property  <<raCreationDate>> was set at test case level with value <<" + raCreationDate + ">>")

/* ---------- CUSTOM METHODS ---------- */

public void runTestCase(String testCaseName) {
	testRunner.runTestStepByName(testCaseName)
}

public responseBody(String testCaseName) {
	return new JsonSlurper().parseText(testRunner.testCase.getTestStepByName(testCaseName).getPropertyValue("response"))
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2662] [3] ReCall action is created" id="fc204070-145b-4c39-bdee-6c1be9d49f69">
    <con:settings/>
    <con:config service="VW Group Services Mock" methodName="createRecallAction" resourcePath="/campaigns" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2662] [3] ReCall action is created" id="6077e283-8f93-4fd3-94db-cfb3bb3a4f4d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://demo.orunext.com</con:endpoint>
        <con:request>{
   "campaign_id":"${#TestCase#campaignID}",
   "brand_codes":[
      "A"
   ],
   "campaign_criteria":[
      {
         "creation_date":"${#TestCase#raCreationDate}",
         "criterion":"${#TestCase#criterion}",
         "oru_relevant":true,
         "title":"${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}",
         "title_language":"de-DE",
         "vehicles":[
            "${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"
         ]
      }
   ],
   "creation_date":"${#TestCase#raCreationDate}",
   "excluded_countries":[
      "ENG"
   ],
   "selected_countries":[
      {
         "country_code":"DEU",
         "start_date":"${#TestCase#raCreationDate}",
         "status":" "
      }
   ],
   "title":"${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}",
   "title_language":"de-DE"
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/campaigns</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="d42b2234-71e5-4aa5-84fe-953ef01d40de" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2662] [4] ReCall action is created - Search For ReCall Action" id="59e5e588-c62f-4ecb-bd08-adcf3d7bd4f6" disabled="true">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/recall/actions2/searches" methodName="searchReCallActionsV2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2662] [4] ReCall action is created - Search For ReCall Action" id="1e051c47-9141-4f04-bdcb-6082c3de4cb9" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>{
   "columns":[
      "actionCode",
      "title",
      "creationTimestamp",
      "importTimestamp",
      "oemilInstance",
      "criteriaCount",
      "vehiclesCount",
      "campaignSetActionCode",
      "oruCreated",
      "brands",
      "countries_code"
   ],
   "columnConditions":[
      {
         "column":"search_actionCode",
         "operator":"containsIgnoringCase",
         "value":"${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"
      }
   ],
   "sortDirection":"asc",
   "limit":100,
   "count":true,
   "start":0,
   "sortBy":"actionCode"
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/recall/actions2/searches</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="e217fe1e-6f76-4988-b192-8af33b4f795c" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>574a8d3e2fef4103</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Wed, 22 Nov 2023 11:35:29 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"574a8d3e2fef4103","date":"Wed, 22 Nov 2023 11:35:29 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="ee563004-c47b-4774-8f31-7ed413e1e2d9" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>574a8d3e2fef4103</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Wed, 22 Nov 2023 11:35:29 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"574a8d3e2fef4103","date":"Wed, 22 Nov 2023 11:35:29 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:parameterOrder/>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2662] [5] ReCall action is created - Check If ReCall Action Was Imported" id="51b26928-e00c-4a6e-8248-bacbe4ac13d3">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper

/* ---------- MAIN CODE ---------- */

//declare variables for the number of retries, seoconds in-between retries and loop counter
int numberOfRetries = context.expand('${#TestCase#raNumberOfRetries}').toInteger()
int secondsBetweenRetries = context.expand('${#TestCase#raSecondsBetweenRetries}').toInteger()
int i = 0

//declare variable for the API call name
String apiCallName = "[Pre-Condition] [OTA-2662] [4] ReCall action is created - Search For ReCall Action"

//run disabled set-up test step to search for ReCall Action
runTestCase(apiCallName)

//declare variable for the size of the ReCall Actions returned by the API call
int responseBodySize = responseBody(apiCallName).size

//while the response body size is 0, meaning the ReCall Action has not been imported, repeat the process
while (responseBodySize == 0) {
	if (i == numberOfRetries) {
		log.info("Validation for mock ReCall Action import failed after " + numberOfRetries + " retries")
		throw new Exception("Validation for mock ReCall Action import failed after " + numberOfRetries + " retries")
	}
	Thread.sleep(secondsBetweenRetries * 1000)
	log.info("Checking to see if the mock ReCall Action was imported - Attempt &lt;&lt;" + (i + 1) +">>")
	runTestCase(apiCallName)
	responseBodySize = responseBody(apiCallName).size
	i++
}

log.info("Mock ReCall Action &lt;&lt;" + responseBody(apiCallName).actionCode[0] + ">> was imported")

/* ---------- CUSTOM METHODS ---------- */

public void runTestCase(String testCaseName) {
	testRunner.runTestStepByName(testCaseName)
}

public responseBody(String testCaseName) {
	return new JsonSlurper().parseText(testRunner.testCase.getTestStepByName(testCaseName).getPropertyValue("response"))
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2663] [1] Campaign set is created" id="9d31e2d8-eb79-427e-8ba9-6208ae1b843b">
    <con:settings/>
    <con:config service="APS Campaign Service" resourcePath="/api/oru/aps_campaigns/campaign_sets" methodName="createCampaignSet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2663] [1] Campaign set is created" id="aa86d178-2faf-4f4d-a345-33300f290950" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>{
   "actionCode":"${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}",
   "type":"ORU4",
   "author":"",
   "progressReportParameters":{
      "forceTimeInterval":"PT5M",
      "prerequisites":{
         "percentage":10,
         "timeInterval":"PT59M"
      }
   },
   "oemilInstance":"MOCK",
   "configuration":{
      "showDownload":false,
      "autoDownload":true,
      "autoInstall":false,
      "obdRelevance":true,
      "tuningRelevance":false,
      "authorizationLevel":0,
      "checkEnergyBudget":true,
      "highVoltageSupport":false,
      "timerBasedUpdate":false,
      "wifiUpdate":false
   }
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaign_sets</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="a095a3e6-9866-47da-81ad-8526563168bf" name="Status Line is equal to &quot;HTTP/1.1 201 Created&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>3172562900570749</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 09:56:46 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['vary']</con:path>
              <con:element>vary</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Accept-Encoding,User-Agent</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 201 Created</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"3172562900570749","date":"Tue, 07 Nov 2023 09:56:46 GMT","content-length":"0","expires":"0","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","vary":"Accept-Encoding,User-Agent","#status#":"HTTP/1.1 201 Created","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2663] [2] Campaign set is created - Update Campaign Set Configuration" id="8458ba26-f1ce-4392-9aef-4884cdfdcb79">
    <con:settings/>
    <con:config service="APS Campaign Service" resourcePath="/api/oru/aps_campaigns/campaign_sets/{actionCode}" methodName="updateCampaignSet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2663] [2] Campaign set is created - Update Campaign Set Configuration" id="10405c2e-bd95-4a4e-bba0-4dbf270a3c7b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>{
   "actionCode":"${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}",
   "name":"${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}",
   "changeMeasureCode":null,
   "author":"Andrei Iota",
   "oemilInstance":"MOCK",
   "progressReportParameters":{
      "forceTimeInterval":"PT5M",
      "prerequisites":{
         "percentage":10,
         "timeInterval":"PT59M"
      }
   },
   "configuration":{
      "showDownload":true,
      "autoDownload":true,
      "autoInstall":true,
      "obdRelevance":true,
      "tuningRelevance":false,
      "authorizationLevel":0,
      "checkEnergyBudget":true,
      "highVoltageSupport":false,
      "timerBasedUpdate":false,
      "wifiUpdate":false
   },
   "reCall":null
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaign_sets/T555</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="9dffacb4-32b5-4e6b-aa2c-bc3cd58f022e" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>8b699ff954acc4e7</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 10:13:41 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"8b699ff954acc4e7","date":"Tue, 07 Nov 2023 10:13:41 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="9a42c3cc-e47d-4b29-b54a-47817d5f9eea" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>8b699ff954acc4e7</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 10:13:41 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"8b699ff954acc4e7","date":"Tue, 07 Nov 2023 10:13:41 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e18c7f59-b4d3-45b7-9be4-ca25f1694d0e" name="[code] is equal to &quot;200&quot;">
          <con:configuration>
            <path>$['code']</path>
            <content>200</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d72ed676-b17c-4633-976c-957451164cbb" name="[name] is equal to &quot;Campaign set&quot;">
          <con:configuration>
            <path>$['name']</path>
            <content>"Campaign set"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9f380a39-9410-4c9c-8f57-0de333957915" name="[message] is equal to &quot;Successfully updated&quot;">
          <con:configuration>
            <path>$['message']</path>
            <content>"Successfully updated"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-11596] [1] Upload Release Notes -  Generate Release Notes ID" id="7e9ee986-b031-4216-88b1-50966037f996">
    <con:settings/>
    <con:config service="APS Campaign Service" resourcePath="/api/oru/aps_campaigns/campaign_sets/{actionCode}/release_notes" methodName="getReleaseNotesInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-11596] [1] Upload Release Notes -  Generate Release Notes ID" id="ae9aa701-7f8d-4428-be92-4bf7ea428d8f" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaign_sets/T555/release_notes</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="87294bf7-af10-4f59-8700-6052bc398b12" name="Status Line is euqal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>84263e3b0f3e7f9c</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 14:22:32 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"84263e3b0f3e7f9c","date":"Tue, 07 Nov 2023 14:22:32 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="dad26c50-3942-4584-8475-02849495e382" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>84263e3b0f3e7f9c</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 14:22:32 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"84263e3b0f3e7f9c","date":"Tue, 07 Nov 2023 14:22:32 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" id="3cf822df-1857-4333-a91c-a196227bd395" name="[releaseNotesId] exists">
          <con:configuration>
            <path>$['releaseNotesId']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-11596] [2] Upload Release Notes" id="2a3ee9c1-92a8-401e-8843-478bfd401789">
    <con:settings/>
    <con:config service="APS Campaign Service" resourcePath="/api/oru/aps_campaigns/release_notes/{id}/{language}" methodName="uploadReleaseNotes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-11596] [2] Upload Release Notes" id="e1122fd6-15fe-4df9-b945-be8d3fc04391" mediaType="multipart/form-data" postQueryString="true">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/release_notes/6b77a4c1-f093-4d69-9579-23677600f59e/en-US</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="6d11d27d-b52b-433b-9387-b1f7f2fc1456" name="Status Line is equal to &quot;HTTP/1.1 201 Created&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>6c89adbc487a1153</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 14:52:35 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['location']</con:path>
              <con:element>location</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>/aps_campaigns/release_notes/6b77a4c1-f093-4d69-9579-23677600f59e/en_US</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 201 Created</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"6c89adbc487a1153","date":"Tue, 07 Nov 2023 14:52:35 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","location":"/aps_campaigns/release_notes/6b77a4c1-f093-4d69-9579-23677600f59e/en_US","#status#":"HTTP/1.1 201 Created","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="6bc3e8ea-2e01-4480-8883-8836ce21ddef" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>6c89adbc487a1153</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 14:52:35 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['location']</con:path>
              <con:element>location</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>/aps_campaigns/release_notes/6b77a4c1-f093-4d69-9579-23677600f59e/en_US</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 201 Created</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"6c89adbc487a1153","date":"Tue, 07 Nov 2023 14:52:35 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","location":"/aps_campaigns/release_notes/6b77a4c1-f093-4d69-9579-23677600f59e/en_US","#status#":"HTTP/1.1 201 Created","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f361cd52-8546-455d-ab94-fa3966e51d31" name="[code] is equal to &quot;201&quot;">
          <con:configuration>
            <path>$['code']</path>
            <content>201</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c6c7e5df-87cc-4dee-a425-6a9710a5126d" name="[name] is equal to &quot;Release Notes&quot;">
          <con:configuration>
            <path>$['name']</path>
            <content>"Release Notes"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4fffeb67-1d46-4241-a2a7-633dd6d6df5d" name="[message] is equal to &quot;Successfully created&quot;">
          <con:configuration>
            <path>$['message']</path>
            <content>"Successfully created"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1163ba26-1f1e-43ba-8190-1dcee566d0dc" name="[warning] is null">
          <con:configuration>
            <path>$['warning']</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="releaseNotes" value="{&quot;title&quot;:&quot;${#TestCase#campaignID}-${#TestCase#code} Release Note&quot;,&quot;updateDescription&quot;:&quot;This is an update description.&quot;,&quot;updateSummary&quot;:&quot;This is an update summary.&quot;,&quot;additionalFunctions&quot;:&quot;This is an additional function.&quot;,&quot;generalWarning&quot;:&quot;This is a general warning.&quot;,&quot;additionalWarning&quot;:&quot;This is an additional warning.&quot;}"/>
          <con:entry key="htmlPackage" value=""/>
          <con:entry key="language" value="en_US"/>
          <con:entry key="id" value="${[Pre-Condition] [OTA-11596] [1] Upload Release Notes -  Generate Release Notes ID#ResponseAsXml#declare namespace ns1='https://demo.orunext.com/api/oru/aps_campaigns/campaign_sets/T555/release_notes'; //ns1:Response[1]/ns1:releaseNotesId[1]}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>id</con:entry>
          <con:entry>language</con:entry>
          <con:entry>htmlPackage</con:entry>
          <con:entry>releaseNotes</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2664] [1] [Set-Up] Create campaign - Generate Campaign Input Data" id="a146a04e-d1c0-404b-a81f-9cb995873f14">
    <con:settings/>
    <con:config>
      <script>import java.text.SimpleDateFormat

/* ---------- MAIN CODE ---------- */

String cEndDate = relativeTimestamp(7)

//set test case level propertiy storing the value for End Date
context.testCase.setPropertyValue("cEndDate", cEndDate)
log.info("Property  &lt;&lt;cEndDate>> was set at test case level with value &lt;&lt;" + cEndDate + ">>")

/* ---------- CUSTOM METHODS ---------- */

//method that returns a a past(negative number input) or future (positive number input) timestamp relative to the current timestamp
public String relativeTimestamp(int days) {
	Calendar date = Calendar.getInstance()
	date.setTime(new Date())
	date.add(Calendar.DATE, days)
	return new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SS'Z'").format(date.getTime()).toString()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2664] [2] Create campaign" id="29e252df-9783-4dff-93f4-2aff8ce00cf7">
    <con:settings/>
    <con:config service="APS Campaign Service" resourcePath="/api/oru/aps_campaigns/campaign_sets/{actionCode}/campaigns" methodName="createCampaignInSet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2664] [2] Create campaign" id="54ef8f38-92c8-41a5-b4c8-80bf3bb138f5" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>{
   "criterion":"${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_criteria'][0]['criterion']}",
   "changeMeasureCode":"${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}",
   "recallExported":true,
   "endDate":"${#TestCase#cEndDate}"
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaign_sets/T555/campaigns</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="af8da2a6-fade-435e-9cee-ccdca2a6225a" name="Status Line is equal to &quot;HTTP/1.1 201 Created&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>90247dfd31f85a92</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 13:59:52 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['vary']</con:path>
              <con:element>vary</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Accept-Encoding,User-Agent</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 201 Created</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"90247dfd31f85a92","date":"Tue, 07 Nov 2023 13:59:52 GMT","content-length":"0","expires":"0","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","vary":"Accept-Encoding,User-Agent","#status#":"HTTP/1.1 201 Created","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="actionCode" value="${#TestCase#campaignID}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2750] [1] [Set-Up] Flash File exists in Version42 Mock - Generate Data Source File" id="86942641-31d1-40e1-8f45-8602e5f30670">
    <con:settings/>
    <con:config>
      <script><![CDATA[import com.eviware.soapui.support.GroovyUtils

/* ---------- MAIN CODE ---------- */

//declare variable for the data source files path
String dataSourceFilesPath = new GroovyUtils(context).getProjectPath() + "\\" + context.expand('${#TestSuite#testSet}')  + "\\" + context.expand('${#TestCase#test}') + "\\data-source-files"

//set test case level property storing the path to the data source files
context.testCase.setPropertyValue("dataSourceFilesPath", dataSourceFilesPath)
log.info("Property <<dataSourceFilesPath>> was set at test case level with value <<" + dataSourceFilesPath + ">>")

//crate new directory called data-source-files if it doesn't already exist
createDirectory(dataSourceFilesPath)

//declare variable for the path to the data souce file that stores Flash File names
String flashFileNamesFilePath = dataSourceFilesPath + "\\flashFileNames.txt"

//create data souce file to store Flash File names
createFile(dataSourceFilesPath, "flashFileNames.txt")

//set test case level property storing the path to the data source file that stores Flash File names
context.testCase.setPropertyValue("flashFileNamesFilePath", flashFileNamesFilePath)
log.info("Property <<flashFileNamesFilePath>> was set at test case level with value <<" + flashFileNamesFilePath + ">>")

/* ---------- CUSTOM METHODS ---------- */

//method that returns the current test suite formatted to match its  composite project name
public String testSuite() {
	return testRunner.testCase.testSuite.name
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("<", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method that creates one or mote directories if they don't exists already
public void createDirectory(String path) {
	File directory = new File(path)
	if (!directory.exists()) {
		directory.mkdirs()
		log.info("Directory was created <<" +  path + ">>")
    }
}

// method that creates  a file or overwrites an existing file with the same name
public void createFile(String path, String fileName) {
	try {
		File file = new File(path + "\\" + fileName)
		
		if (file.exists()) { 
			file.delete()
			file.createNewFile()
			log.info("File <<" +  fileName + ">> overwritten at path <<" + path + ">>")
		} 
		else {
			file.createNewFile()
			log.info("File <<" +  fileName + ">> created at path <<" + path + ">>")
		}  
	} 
	catch (IOException e) {
		log.info("An error occurred while creating or overwriting file <<" +  fileName + ">> at path <<" + path + ">>")
		e.printStackTrace();  
    }  
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2750] [2] [Set-Up] Flash File exists in Version42 Mock - Generate Flash Files" id="8f76dffc-71ab-4d88-be1f-f521cda4e402">
    <con:settings/>
    <con:config>
      <script><![CDATA[import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.eviware.soapui.support.GroovyUtils
import org.apache.commons.lang3.RandomStringUtils

/* ---------- MAIN CODE ---------- */

//declare variable for the files path
String flashFilesPath = new GroovyUtils(context).getProjectPath() + "\\" + context.expand('${#TestSuite#testSet}')  + "\\" + context.expand('${#TestCase#test}') + "\\flash-files"

//set test case level property storing the path to the flash  files
context.testCase.setPropertyValue("flashFilesPath", flashFilesPath)
log.info("Property <<flashFilesPath>> was set at test case level with value <<" + flashFilesPath + ">>")

//crate new directory called flash-files if it doesn't already exist
createDirectory(flashFilesPath)

//delete all existing files from the directory
cleanDirectory(flashFilesPath)

//generate flash file names
String binOne = "BIN_AFF_" + timestamp() + "_" +  randomNumber() +  ".bin"
String binTwo = "BIN_AFF_" + timestamp() + "_" +  randomNumber() +  ".bin"
String odxf = "ODX_F_AFF_" + timestamp() + "_" +  randomNumber() +  ".odx-f"
String oucOne = "OUC_AFF_" + timestamp() + "_" +   randomNumber() +  ".ouc"
String oucTwo = "OUC_AFF_" + timestamp() + "_" +  randomNumber() +  ".ouc"

//set test case level properties storing the value for the Flash File names
context.testCase.setPropertyValue("binFileOne", binOne)
log.info("Property <<binFileOne>> was set at test case level with value <<" + binOne + ">>")
context.testCase.setPropertyValue("binFileTwo", binTwo)
log.info("Property <<binFileTwo>> was set at test case level with value <<" + binTwo + ">>")
context.testCase.setPropertyValue("odxfFile", odxf)
log.info("Property <<vcHashFile>> was set at test case level with value <<" + odxf + ">>")
context.testCase.setPropertyValue("oucFileOne", oucOne)
log.info("Property <<oucFileOne>> was set at test case level with value <<" + oucOne + ">>")
context.testCase.setPropertyValue("oucFileTwo", oucTwo)
log.info("Property <<oucFileTwo>> was set at test case level with value <<" + oucTwo + ">>")

//create Flash Files
createFile(flashFilesPath, binOne)
createFile(flashFilesPath, binTwo)
createFile(flashFilesPath, odxf)
createFile(flashFilesPath, oucOne)
createFile(flashFilesPath, oucTwo)

//declare variable for the flash files
File binFileOne = new File(flashFilesPath + "\\" + binOne)
File binFileTwo = new File(flashFilesPath + "\\" + binTwo)
File odxfFile = new File(flashFilesPath + "\\" + odxf)
File oucFileOne = new File(flashFilesPath + "\\" + oucOne)
File oucFileTwo = new File(flashFilesPath + "\\" + oucTwo)

//add content to the .bin Flash Files and the .odx-f Flash File
appendToFile(binFileOne, flashFilesContent())
appendToFile(binFileTwo, flashFilesContent())
appendToFile(odxfFile, flashFilesContent())

//declare variable for the content of the .ouc Flash Files
String oucFlashFileContent  = context.expand('${#TestCase#oucFlashFileContent}')

//add initial content to the .ouc Flash Files
appendToFile(oucFileOne, oucFlashFileContent)
appendToFile(oucFileTwo, oucFlashFileContent)

//decalre variable with the parsed JSON content of the first .ouc Flash File
def oucFileOneJson = new JsonSlurper().parse(oucFileOne)

//update the values for softwareVersion and sparePartNumber
oucFileOneJson.containerIdent.sparePartNumber = sparePartNumber()
oucFileOneJson.containerIdent.softwareVersion = softwareVersion()

//write a beautified version of the updated content back to the file
oucFileOne.write(JsonOutput.prettyPrint(JsonOutput.toJson(oucFileOneJson)))

//decalre variable with the parsed JSON content of the second .ouc Flash File
def oucFileTwoJson = new JsonSlurper().parse(oucFileTwo)

//update the values for softwareVersion and sparePartNumber
oucFileTwoJson.containerIdent.sparePartNumber = sparePartNumber()
oucFileTwoJson.containerIdent.softwareVersion = softwareVersion()

//write a beautified version of the updated content back to the file
oucFileTwo.write(JsonOutput.prettyPrint(JsonOutput.toJson(oucFileTwoJson)))

//declare variable for the file containing the Flash File names
File flashFileNames = new File(context.expand('${#TestCase#flashFileNamesFilePath}'))

//add flash file names to the flashFileNames.txt data source file
appendToFile(flashFileNames, binOne)
appendToFile(flashFileNames, binTwo)
appendToFile(flashFileNames, odxf)
appendToFile(flashFileNames, oucOne)
appendToFile(flashFileNames, oucTwo)

/* ---------- CUSTOM METHODS ---------- */

//method that returns the current test suite formatted to match its  composite project name
public String testSuite() {
	return testRunner.testCase.testSuite.name
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("<", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method that creates one or mote directories if they don't exists already
public void createDirectory(String path) {
	File directory = new File(path)
	if (!directory.exists()) {
		directory.mkdirs()
		log.info("Directory was created <<" +  path + ">>")
    }
}

//methods that cleans up a directory
public void cleanDirectory(String path) {
	File directory = new File(path)
	for(File file: directory.listFiles()) {
		if (!file.isDirectory()) {
			file.delete()
		}
	}
	log.info("Directory was cleaned up <<" +  path + ">>")
}

// method that creates  a file or overwrites an existing file with the same name
public void createFile(String path, String fileName) {
	try {
		File file = new File(path + "\\" + fileName)
		
		if (file.exists()) { 
			file.delete()
			file.createNewFile()
			log.info("File <<" +  fileName + ">> overwritten at path <<" + path + ">>")
		} 
		else {
			file.createNewFile()
			log.info("File <<" +  fileName + ">> created at path <<" + path + ">>")
		}  
	} 
	catch (IOException e) {
		log.info("An error occurred while creating or overwriting file <<" +  fileName + ">> at path <<" + path + ">>")
		e.printStackTrace();  
    }  
}

//method that appends a new line of text to a file
public void appendToFile(File file, String text) {
	if (file.length() == 0) {
		file.text =  text
	} 
	else {
		file.append("\n" + text)
	}
	log.info("New line of text was added to the file <<" + file.getName() + ">> at path <<" + file.parent + ">>")
}

//method that returns a timestamp 1 second after method is called
public String timestamp() {
	Thread.sleep(1000);
	return new SimpleDateFormat("yyyyMMddHHmmssSS").format(new Date()).toString()
}

//method that returns a random four-digit number
public int randomNumber() {
	return new Random().nextInt(9999 - 1000 + 1) + 1000
}

public String sparePartNumber() {
	return RandomStringUtils.random(9, (('a'..'z') + ('A'..'Z') + ('0'..'9')).join().toCharArray())
}

public String softwareVersion() {
	return "T" + RandomStringUtils.random(3, (('0'..'9')).join().toCharArray())
}

public String flashFilesContent() {
	return "T" + RandomStringUtils.random(2048*1024, (('A'..'Z') + ('0'..'9')).join().toCharArray())
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="[Pre-Condition] [OTA-2750] [3] [Data-Source] Flash File exists in Version42 Mock" id="d58b1040-436c-42c3-bc66-15d3340d8c7e">
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.teststeps.datasource.DataSourceContainer@prepared-properties">&lt;xml-fragment/></con:setting>
    </con:settings>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="File">
        <con:configuration>
          <fileName>${#TestCase#flashFileNamesFilePath}</fileName>
          <separator>,</separator>
          <trim>false</trim>
          <charset>Cp1252</charset>
          <quotedValues>false</quotedValues>
        </con:configuration>
      </con:dataSource>
      <con:shared>false</con:shared>
      <con:restartShared>false</con:restartShared>
      <con:property>flashFileName</con:property>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:restartOnRun>true</con:restartOnRun>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2750] [4] Flash File exists in Version42 Mock - Generate Upload Data File" id="2084c4e5-a369-4c98-85b1-09c4fce64971">
    <con:settings/>
    <con:config>
      <script><![CDATA[import java.text.SimpleDateFormat
import java.util.Random
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.eviware.soapui.support.GroovyUtils

/* ---------- MAIN CODE ---------- */

//declare variable for the file path
String uploadDataFilesPath =  new GroovyUtils(context).getProjectPath() + "\\" + context.expand('${#TestSuite#testSet}')  + "\\" + context.expand('${#TestCase#test}') + "\\upload-data-files"

//set test case level property storing the path to the vehicle files
context.testCase.setPropertyValue("uploadDataFilesPath", uploadDataFilesPath)
log.info("Property <<uploadDataFilesPath>> was set at test case level with value <<" + uploadDataFilesPath + ">>")

//crate new directory called upload-data-files if it doesn't already exist
createDirectory(uploadDataFilesPath)

//declare variables for the path to the Upload Data file
String uploadDataFileName = context.expand('${#TestCase#uploadDataFileName}') 
String uploadDataFilePath = uploadDataFilesPath + "\\" + uploadDataFileName

//set test case level property storing the path to the Upload Data file
context.testCase.setPropertyValue("uploadDataFilePath", uploadDataFilePath)
log.info("Property <<uploadDataFilePath>> was set at test case level with value <<" + uploadDataFilePath + ">>")

//declare variable for the Upload Data file
File uploadDataFile = file(uploadDataFilesPath, uploadDataFileName)

//declare variable for the content of the Upload Data file
String uploadDataFileContent  = context.expand('${#TestCase#uploadDataFileContent}')

//add the Upload Data content to the file
appendToFile(uploadDataFile, uploadDataFileContent)

//decalre variable with the parsed JSON content of the Upload Data file
def json = new JsonSlurper().parse(uploadDataFile)

//decalre variables for the values of the flash Flash File name and Flash File path
String flashFileName =  context.expand('${[Pre-Condition] [OTA-2750] [3] [Data-Source] Flash File exists in Version42 Mock#flashFileName}')
String flashFilePath =  context.expand('${#TestCase#flashFilesPath}') + "\\" + flashFileName

//declare variable for the Flash FIle
File flashFile = new File(flashFilePath)

//update the value for the [name] key
json.name = flashFileName
log.info("The value of the <<name>> key was updated to <<" + flashFileName + ">>")

//write a beautified version of the updated content back to the file
uploadDataFile.write(JsonOutput.prettyPrint(JsonOutput.toJson(json)))

//decalre variables for the upload Flash File API request
def request = testRunner.testCase.getTestStepByName("[Pre-Condition] [OTA-2750] [5] Flash File exists in Version42 Mock").testRequest

//remove all the existing  attachments from the Flash File API request
for (attachment in request.attachments) {
    request.removeAttachment(attachment)
}

//attach the Flash File and the Upload Data file to the request
def attachment = request.attachFile(flashFile, true)
attachment.contentType = "application/octet-stream"
log.info("Flash File was successfully attached to the request")
attachment = request.attachFile(uploadDataFile, true)
attachment.contentType = "application/json"
log.info("Upload Data file  was successfully attached to the request")


/* ---------- CUSTOM METHODS ---------- */

//method that returns the current test suite formatted to match its  composite project name
public String testSuite() {
	return testRunner.testCase.testSuite.name
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("<", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method that creates one or mote directories if they don't exists already
public void createDirectory(String path) {
	File directory = new File(path)
	if (!directory.exists()) {
		directory.mkdirs()
		log.info("Directory was created <<" +  path + ">>")
    }
}

// method that creates a file or overwrites an existing file with the same name, then returns it
public File file(String path, String fileName) {
	File file = null
	try {
		file = new File(path + "\\" + fileName)
		
		if (file.exists()) { 
			file.delete()
			file.createNewFile()
			log.info("File <<" +  fileName + ">> overwritten at path <<" + path + ">>")
		} 
		else {
			file.createNewFile()
			log.info("File <<" +  fileName + ">> created at path <<" + path + ">>")
		}  
	} 
	catch (IOException e) {
		log.info("An error occurred while creating or overwriting file <<" +  fileName + ">> at path <<" + path + ">>")
		e.printStackTrace();  
    }
    return file
}

//method that appends a new line of text to a file
public void appendToFile(File file, String text) {
	if (file.length() == 0) {
		file.text =  text
	} 
	else {
		file.append("\n" + text)
	}
	log.info("New line of text was added to the file <<" + file.getName() + ">> at path <<" + file.parent + ">>")
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2750] [5] Flash File exists in Version42 Mock" id="e889a6a5-938a-4ffc-848e-f3a6d20ed1dd">
    <con:settings/>
    <con:config service="VW Group Services Mock" resourcePath="/version42/flashdata" methodName="createUploadFlashData" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2750] [5] Flash File exists in Version42 Mock" id="4508a75c-3b37-4fa0-a1c8-3e53e654cd8a" mediaType="multipart/form-data" postQueryString="true">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>http://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/version42/flashdata</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a6654d5f-9002-472b-b574-0d5cdffac80a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>201</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="uploadData" value="file:uploadData.json"/>
          <con:entry key="file" value="file:${[Pre-Condition] [OTA-2750] [3] [Data-Source] Flash File exists in Version42 Mock#flashFileName}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="[Pre-Condition] [OTA-2750] [6] [Data-Source-Loop] Flash File exists in Version42 Mock" id="9de7ac95-d487-402f-9696-a191ab16baf0">
    <con:settings/>
    <con:config>
      <dataSourceStep>[Pre-Condition] [OTA-2750] [3] [Data-Source] Flash File exists in Version42 Mock</dataSourceStep>
      <targetStep>[Pre-Condition] [OTA-2750] [4] Flash File exists in Version42 Mock - Generate Upload Data File</targetStep>
      <discardResults>false</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA-2771] [1] [Set-Up] VehicleConfig is uploaded to the VC-Port - Generate Vehicle Configuration File" id="b4c24f3f-18a7-43b8-b4c6-9bfa4c0bffe7">
    <con:settings/>
    <con:config>
      <script><![CDATA[import java.text.SimpleDateFormat
import java.util.Random
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.eviware.soapui.support.GroovyUtils

/* ---------- MAIN CODE ---------- */

//declare variable for the file path
String vehicleFilesPath = new GroovyUtils(context).getProjectPath() + "\\" + context.expand('${#TestSuite#testSet}')  + "\\" + context.expand('${#TestCase#test}') + "\\vehicle-files"

//set test case level property storing the path to the vehicle files
context.testCase.setPropertyValue("vehicleFilesPath", vehicleFilesPath)
log.info("Property <<vehicleFilesPath>> was set at test case level with value <<" + vehicleFilesPath + ">>")

//crate new directory called vehicle-files if it doesn't already exist
createDirectory(vehicleFilesPath)

//declare variables for the path to the Vehicle Configuration file
String vehicleConfigurationFileName = context.expand('${#TestCase#vehicleConfigurationFileName}') 
String vehicleConfigurationFilePath = vehicleFilesPath + "\\VehicleConfiguration.json"

//set test case level property storing the path to the Vehicle Configuration file
context.testCase.setPropertyValue("vehicleConfigurationFilePath", vehicleConfigurationFilePath)
log.info("Property <<vehicleConfigurationFilePath>> was set at test case level with value <<" + vehicleConfigurationFilePath + ">>")

//declare variable for the Vehicle Configuration file
File vehicleConfigurationFile = file(vehicleFilesPath, vehicleConfigurationFileName)

//declare variable for the content of the Vehicle Configuration file
String vehicleConfigurationFileContent  = context.expand('${#TestCase#vehicleConfigurationFileContent}')

//add the Vehicle Configuration content to the file
appendToFile(vehicleConfigurationFile, vehicleConfigurationFileContent)

//declare variable for the Vehicle Configuration Hash
String vcHash = hexNumber(64)

//set test case level property storing the value for the Vehicle Configuration Hash
context.testCase.setPropertyValue("vcHash", vcHash)
log.info("Property <<vcHash>> was set at test case level with value <<" + vcHash + ">>")

//decalre variable with the parsed JSON content of the Vehicle Configuration file
def json = new JsonSlurper().parse(vehicleConfigurationFile)

//update the values for VIN, vcHash and newestEntryTimestamp
json.assemblyStatus.vehicleInformation.VIN = context.expand('${#TestCase#vin}')
json.assemblyStatusMetaData.vcHash = vcHash
json.assemblyStatusMetaData.newestEntryTimestamp = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SS'Z'").format(new Date()).toString()

//write a beautified version of the updated content back to the file
vehicleConfigurationFile.write(JsonOutput.prettyPrint(JsonOutput.toJson(json)))

/* ---------- CUSTOM METHODS ---------- */

//method that returns the current test suite formatted to match its  composite project name
public String testSuite() {
	return testRunner.testCase.testSuite.name
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("<", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method that creates one or mote directories if they don't exists already
public void createDirectory(String path) {
	File directory = new File(path)
	if (!directory.exists()) {
		directory.mkdirs()
		log.info("Directory was created <<" +  path + ">>")
    }
}

// method that creates a file or overwrites an existing file with the same name, then returns it
public File file(String path, String fileName) {
	File file = null
	try {
		file = new File(path + "\\" + fileName)
		
		if (file.exists()) { 
			file.delete()
			file.createNewFile()
			log.info("File <<" +  fileName + ">> overwritten at path <<" + path + ">>")
		} 
		else {
			file.createNewFile()
			log.info("File <<" +  fileName + ">> created at path <<" + path + ">>")
		}  
	} 
	catch (IOException e) {
		log.info("An error occurred while creating or overwriting file <<" +  fileName + ">> at path <<" + path + ">>")
		e.printStackTrace();  
    }
    return file
}

//method that appends a new line of text to a file
public void appendToFile(File file, String text) {
	if (file.length() == 0) {
		file.text =  text
	} 
	else {
		file.append("\n" + text)
	}
	log.info("New line of text was added to the file <<" + file.getName() + ">> at path <<" + file.parent + ">>")
}

//method that returns an uppercase hexNumber of a given length
public String hexNumber(int length) {
	Random random = new Random()
	StringBuilder stringBuilder = new StringBuilder()
	while(stringBuilder.length() < length) {
		stringBuilder.append(Integer.toHexString(random.nextInt(16)))
	}
	return stringBuilder.toString().toUpperCase()
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-2771] [2] VehicleConfig is uploaded to the VC-Port" id="c97ba8d0-491a-42bd-9dff-ee3fa245b79c">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Configuration" resourcePath="/api/oru/vehicle_configurations/configurations/upload" methodName="uploadConfiguration" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-2771] [2] VehicleConfig is uploaded to the VC-Port" id="6549dcc8-7973-470e-a5c8-72f920e9b5b9" mediaType="multipart/form-data" postQueryString="true">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/vehicle_configurations/configurations/upload</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="51b2595c-2944-4ffa-847b-0b8e81fcbbee" name="Status Line is equal to &quot;HTTP/1.1 201 Created&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>cd1b56d3a07c0a75</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Fri, 17 Nov 2023 14:43:05 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['location']</con:path>
              <con:element>location</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>/vehicle_configurations/vehicles/AMV20231117150011/configurations/C0367D5A13E2F45A48F86F0DC21E1B8B142441DA6E3388400BB5B717EA6646B1</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 201 Created</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"cd1b56d3a07c0a75","date":"Fri, 17 Nov 2023 14:43:05 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","location":"/vehicle_configurations/vehicles/AMV20231117150011/configurations/C0367D5A13E2F45A48F86F0DC21E1B8B142441DA6E3388400BB5B717EA6646B1","#status#":"HTTP/1.1 201 Created","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="4347a3dd-9c68-4434-ac45-36131fb9edc8" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>cd1b56d3a07c0a75</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Fri, 17 Nov 2023 14:43:05 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['location']</con:path>
              <con:element>location</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>/vehicle_configurations/vehicles/AMV20231117150011/configurations/C0367D5A13E2F45A48F86F0DC21E1B8B142441DA6E3388400BB5B717EA6646B1</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 201 Created</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"cd1b56d3a07c0a75","date":"Fri, 17 Nov 2023 14:43:05 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","location":"/vehicle_configurations/vehicles/AMV20231117150011/configurations/C0367D5A13E2F45A48F86F0DC21E1B8B142441DA6E3388400BB5B717EA6646B1","#status#":"HTTP/1.1 201 Created","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1a870eaf-ac1f-4a03-85a9-0223ba84c30e" name="[vin] is equal to &quot;${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}&quot;">
          <con:configuration>
            <path>$['vin']</path>
            <content>"${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8599bbbf-05ea-409c-bdb1-bb6a83726610" name="[configurationHash] is equal to &quot;${#TestCase#vcHash}&quot;">
          <con:configuration>
            <path>$['configurationHash']</path>
            <content>"${#TestCase#vcHash}"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" id="eff6eec8-8858-4db2-b043-b68f17de7bc1" name="[configurationMose] exists">
          <con:configuration>
            <path>$['configurationMose']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="9b919781-440a-49ee-a4f6-ccc05688aa34" name="[firstReport] contains the current date">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [firstReport] key
String firstReport = jsonResponse.firstReport
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [lastReport] contains the current date
assert firstReport.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="da3d870b-5084-4939-9206-0a61dd24c6f6" name="[lastReport] contains the current date">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [lastReport] key
String lastReport = jsonResponse.lastReport
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [lastReport] contains the current date
assert lastReport.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="Set test case level property storing the value of the configuration hash" id="9a0887e6-32ec-4a42-b117-8a0081dc2fd8">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper

/* ---------- MAIN CODE ---------- */

//declare variable for the API call name
String apiCallName = "[Pre-Condition] [OTA-2771] [2] VehicleConfig is uploaded to the VC-Port"

//declare variable for the value of the the configurationHash key
String configurationHash = responseBody(apiCallName).configurationHash

//set test case level propertiy storing the value for Configuration Hash
context.testCase.setPropertyValue("configurationHash", configurationHash)
log.info("Property  &lt;&lt;configurationHash>> was set at test case level with value &lt;&lt;" + configurationHash + ">>")

/* ---------- CUSTOM METHODS ---------- */

public responseBody(String testCaseName) {
	return new JsonSlurper().parseText(context.testCase.getTestStepByName(testCaseName).getPropertyValue("response"))
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="VehicleConfiguration.json" value="file:${#TestCase#vehicleConfigurationFilePath}"/>
          <con:entry key="language" value="en_US"/>
          <con:entry key="brand" value="Audi"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>VehicleConfiguration.json</con:entry>
          <con:entry>brand</con:entry>
          <con:entry>language</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-5088] [1] Batch is created" id="4874428b-b6a9-49ce-86f5-3bdcfb1c5c34">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/campaigns/{actionCode}/{criterion}/{changeMeasureCode}/batches" methodName="createBatch_1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-5088] [1] Batch is created" id="9f3d915c-35e5-460a-ad21-c1ad18d582a6" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>{
   "id":null,
   "state":null,
   "iteration":0,
   "actionCode":"${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}",
   "criterion":"${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_criteria'][0]['criterion']}",
   "name":"${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}-${[Pre-Condition] [OTA-2660] Change Measure is created#RawRequest#$['code']} Batch",
   "completionGoal":100,
   "stopLossLimit":null,
   "vehicleSelectionCriteria":"{\"equipmentCodes\":\"0K4\",\"dealer\":\"\",\"pkn\":\"\"}",
   "logCondition":"ISSUE_ONLY",
   "logRangePresetId":null,
   "startedTime":null,
   "completedTime":null
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaigns/AR31/ACM20231114170931/batches</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="fea630f8-0735-49dd-be9a-7c446ab897e9" name="Status Line is equal to &quot;HTTP/1.1 201 Created&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>bece63b82f9f6c0d</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 14 Nov 2023 16:02:36 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['location']</con:path>
              <con:element>location</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>/campaigns/AR31/31/ACM20231114170931/batches/744</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 201 Created</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"bece63b82f9f6c0d","date":"Tue, 14 Nov 2023 16:02:36 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","location":"/campaigns/AR31/31/ACM20231114170931/batches/744","#status#":"HTTP/1.1 201 Created","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="02a24ff4-30ce-478d-bc85-d4dd5a3fd083" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>bece63b82f9f6c0d</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 14 Nov 2023 16:02:36 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['location']</con:path>
              <con:element>location</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>/campaigns/AR31/31/ACM20231114170931/batches/744</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 201 Created</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"bece63b82f9f6c0d","date":"Tue, 14 Nov 2023 16:02:36 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","location":"/campaigns/AR31/31/ACM20231114170931/batches/744","#status#":"HTTP/1.1 201 Created","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="7067e719-f417-4bb7-8154-e28aa03c9bfa" name="&lt;Response> exists">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Data</con:mode>
            <con:elements>
              <con:path>//Response[1]</con:path>
              <con:element>Response</con:element>
              <con:operatorId>9</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>1212</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
            </con:elements>
            <con:originalMessage>&lt;Response>1212&lt;/Response></con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="changeMeasureCode" value="${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}"/>
          <con:entry key="criterion" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_criteria'][0]['criterion']}"/>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>actionCode</con:entry>
          <con:entry>changeMeasureCode</con:entry>
          <con:entry>criterion</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-5088] [2] Batch is created - Add Vechicle To Batch" id="732ec664-bf92-4180-9509-e8576bf6e4aa">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/campaigns/{actionCode}/{criterion}/{changeMeasureCode}/batches/{batchId}/vehicles" methodName="assignVehiclesToBatchByVIN_1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-5088] [2] Batch is created - Add Vechicle To Batch" id="28fe2bd6-6af1-4b2a-9329-8c6357869649" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>[
  "${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"
]</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaigns/AR42/42/ACM20231120170036/batches/1212/vehicles</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="ac7f77ca-a901-4ef2-96e2-8b82b01df081" name="Status-Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>24bb511741c5e18a</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Mon, 20 Nov 2023 15:12:15 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['vary']</con:path>
              <con:element>vary</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Accept-Encoding,User-Agent</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"24bb511741c5e18a","date":"Mon, 20 Nov 2023 15:12:15 GMT","content-length":"0","expires":"0","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","vary":"Accept-Encoding,User-Agent","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="changeMeasureCode" value="${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}"/>
          <con:entry key="criterion" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_criteria'][0]['criterion']}"/>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
          <con:entry key="batchId" value="${[Pre-Condition] [OTA-5088] [1] Batch is created#ResponseAsXml#//Response[1]}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>actionCode</con:entry>
          <con:entry>batchId</con:entry>
          <con:entry>changeMeasureCode</con:entry>
          <con:entry>criterion</con:entry>
          <con:entry>removePriorAssignments</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA-5614] Run batch" id="79c49418-e518-4562-a054-17cca521bef5">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/campaigns/{actionCode}/{criterion}/{changeMeasureCode}/batches/{batchId}/operations/start" methodName="startBatch_1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA-5614] Run batch" id="0fc6356b-444a-419b-95e5-dc423da80ba5" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaigns/AX18/18/AXACM20231109230518/batches/670/start</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="527a2406-10e2-4502-891f-b741b3ecca4b" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>f1443fccb32fd1cc</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Fri, 10 Nov 2023 09:43:47 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['vary']</con:path>
              <con:element>vary</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Accept-Encoding,User-Agent</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"f1443fccb32fd1cc","date":"Fri, 10 Nov 2023 09:43:47 GMT","content-length":"0","expires":"0","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","vary":"Accept-Encoding,User-Agent","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="changeMeasureCode" value="${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}"/>
          <con:entry key="criterion" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_criteria'][0]['criterion']}"/>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
          <con:entry key="batchId" value="${[Pre-Condition] [OTA-5088] [1] Batch is created#ResponseAsXml#//Response[1]}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>actionCode</con:entry>
          <con:entry>batchId</con:entry>
          <con:entry>changeMeasureCode</con:entry>
          <con:entry>criterion</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA5285] [1] [Set-Up] Repair advice is calculated- Generate Vehicle Manifest File" id="db999d37-5eb9-4407-83c8-81a238f4e325">
    <con:settings/>
    <con:config>
      <script><![CDATA[import java.text.SimpleDateFormat
import java.util.Random
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.eviware.soapui.support.GroovyUtils

/* ---------- MAIN CODE ---------- */

//declare variable for the file path
String vehicleFilesPath =  context.expand('${#TestCase#vehicleFilesPath}')

//set test case level property storing the path to the vehicle files
context.testCase.setPropertyValue("vehicleFilesPath", vehicleFilesPath)
log.info("Property <<vehicleFilesPath>> was set at test case level with value <<" + vehicleFilesPath + ">>")

//crate new directory called vehicle-files if it doesn't already exist
createDirectory(vehicleFilesPath)

//declare variables for the path to the Vehicle Manifest file
String vehicleManifestFileName = context.expand('${#TestCase#vehicleManifestFileName}') 
String vehicleManifestFilePath = vehicleFilesPath + "\\" + vehicleManifestFileName

//set test case level property storing the path to the Vehicle Manifest file
context.testCase.setPropertyValue("vehicleManifestFilePath", vehicleManifestFilePath)
log.info("Property <<vehicleManifestFilePath>> was set at test case level with value <<" + vehicleManifestFilePath + ">>")

//declare variable for the Vehicle Manifest file
File vehicleManifestFile = file(vehicleFilesPath, vehicleManifestFileName)

//declare variable for the content of the Vehicle Manifest file
String vehicleManifestFileContent  = context.expand('${#TestCase#vehicleManifestFileContent}')

//add the Vehicle Manifest content to the file
appendToFile(vehicleManifestFile, vehicleManifestFileContent)

//decalre variable with the parsed JSON content of the Vehicle Manifest file
def json = new JsonSlurper().parse(vehicleManifestFile)

//update the values for vcHash, Change Measure Code
json.vcHash = context.expand('${#TestCase#vcHash}')
json.amCode = context.expand('${#TestCase#code}')
json.updateMap.updateItems[0].updateItem.progInformation.validVersionMapping[0].dataFiles[0].blockFileName = context.expand('${#TestCase#binFileOne}')
json.updateMap.updateItems[0].updateItem.progInformation.validVersionMapping[0].dataFiles[1].blockFileName = context.expand('${#TestCase#binFileTwo}')
json.updateMap.updateItems[0].updateItem.progInformation.validVersionMapping[0].metaFile = context.expand('${#TestCase#odxfFile}')
json.updateMap.updateItems[0].updateItem.postActions[0].crcAction.manifest = context.expand('${#TestCase#oucFileOne}').replace(".ouc", "")
json.updateMap.updateItems[0].updateItem.postActions[1].crcAction.manifest = context.expand('${#TestCase#oucFileTwo}').replace(".ouc", "")

//write a beautified version of the updated content back to the file
vehicleManifestFile.write(JsonOutput.prettyPrint(JsonOutput.toJson(json)))

/* ---------- CUSTOM METHODS ---------- */

//method that creates one or mote directories if they don't exists already
public void createDirectory(String path) {
	File directory = new File(path)
	if (!directory.exists()) {
		directory.mkdirs()
		log.info("Directory was created <<" +  path + ">>")
    }
}

// method that creates a file or overwrites an existing file with the same name, then returns it
public File file(String path, String fileName) {
	File file = null
	try {
		file = new File(path + "\\" + fileName)
		
		if (file.exists()) { 
			file.delete()
			file.createNewFile()
			log.info("File <<" +  fileName + ">> overwritten at path <<" + path + ">>")
		} 
		else {
			file.createNewFile()
			log.info("File <<" +  fileName + ">> created at path <<" + path + ">>")
		}  
	} 
	catch (IOException e) {
		log.info("An error occurred while creating or overwriting file <<" +  fileName + ">> at path <<" + path + ">>")
		e.printStackTrace();  
    }
    return file
}

//method that appends a new line of text to a file
public void appendToFile(File file, String text) {
	if (file.length() == 0) {
		file.text =  text
	} 
	else {
		file.append("\n" + text)
	}
	log.info("New line of text was added to the file <<" + file.getName() + ">> at path <<" + file.parent + ">>")
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA5285] [2] [Set-Up] Repair advice is calculated- Generate Configuration Manifest File" id="c4fd283e-bd85-4b70-84fd-9842c6325a82">
    <con:settings/>
    <con:config>
      <script><![CDATA[import java.text.SimpleDateFormat
import java.util.Random
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.eviware.soapui.support.GroovyUtils

/* ---------- MAIN CODE ---------- */

//declare variable for the file path
String vehicleFilesPath =  context.expand('${#TestCase#vehicleFilesPath}')

//declare variables for the path to the Configuration Manifest file
String configurationManifestFileName = context.expand('${#TestCase#configurationManifestFileName}') 
String configurationManifestFilePath = vehicleFilesPath + "\\ConfManifest_0075.json"

//crate new directory called vehicle-files if it doesn't already exist
createDirectory(vehicleFilesPath)

//set test case level property storing the path to the Vehicle Configuration file
context.testCase.setPropertyValue("configurationManifestFilePath", configurationManifestFilePath)
log.info("Property <<configurationManifestFilePath>> was set at test case level with value <<" + configurationManifestFilePath + ">>")

//declare variable for the Configuration Manifest file
File configurationManifestFile = file(vehicleFilesPath, configurationManifestFileName)

//declare variable for the content of the Configuration Manifest file
String configurationManifestFileContent  = context.expand('${#TestCase#configurationManifestFileContent}')

//add the Configuration Manifest content to the file
appendToFile(configurationManifestFile, configurationManifestFileContent)

//decalre variable with the parsed JSON content of the Configuration Manifest file
def json = new JsonSlurper().parse(configurationManifestFile)

//overwirte the initial content of the file with a beautified version
configurationManifestFile.write(JsonOutput.prettyPrint(JsonOutput.toJson(json)))

/* ---------- CUSTOM METHODS ---------- */

//method that creates one or mote directories if they don't exists already
public void createDirectory(String path) {
	File directory = new File(path)
	if (!directory.exists()) {
		directory.mkdirs()
		log.info("Directory was created <<" +  path + ">>")
    }
}

// method that creates a file or overwrites an existing file with the same name, then returns it
public File file(String path, String fileName) {
	File file = null
	try {
		file = new File(path + "\\" + fileName)
		
		if (file.exists()) { 
			file.delete()
			file.createNewFile()
			log.info("File <<" +  fileName + ">> overwritten at path <<" + path + ">>")
		} 
		else {
			file.createNewFile()
			log.info("File <<" +  fileName + ">> created at path <<" + path + ">>")
		}  
	} 
	catch (IOException e) {
		log.info("An error occurred while creating or overwriting file <<" +  fileName + ">> at path <<" + path + ">>")
		e.printStackTrace();  
    }
    return file
}

//method that appends a new line of text to a file
public void appendToFile(File file, String text) {
	if (file.length() == 0) {
		file.text =  text
	} 
	else {
		file.append("\n" + text)
	}
	log.info("New line of text was added to the file <<" + file.getName() + ">> at path <<" + file.parent + ">>")
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA5285] [3] Repair advice is calculated" id="c9ba8c96-d9c3-4104-8368-dbd3c3f7ec5e">
    <con:settings/>
    <con:config service="VW Group Services Mock" resourcePath="/repair/advice" methodName="createRepairAdvice" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA5285] [3] Repair advice is calculated" id="6869dc73-1ec5-4eed-8820-728ca53a9b53" mediaType="multipart/form-data" postQueryString="true">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com/api/vw-group-services-mock</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/repair/advice</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="acbda760-d9e2-4128-8de1-64478b779f91" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Fri, 10 Nov 2023 09:44:12 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Fri, 10 Nov 2023 09:44:12 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="b59a2f69-199c-40ba-9d57-61e5911b5a70" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Fri, 10 Nov 2023 09:44:12 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Fri, 10 Nov 2023 09:44:12 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4c845adf-f170-4420-a281-a6537dcacbfe" name="[vin] is equal to &quot;${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#vin}&quot;">
          <con:configuration>
            <path>$['vin']</path>
            <content>${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#vin}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="61373beb-4936-4965-bbaa-5c6447935173" name="[changeMeasureCode] is equal to &quot;${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#changeMeasureCode}&quot;">
          <con:configuration>
            <path>$['changeMeasureCode']</path>
            <content>${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#changeMeasureCode}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ce5f7716-57bd-4b4a-9c26-1aee061c537e" name="[adviceResultCode] is equal to &quot;${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#adviceResultCode}&quot;">
          <con:configuration>
            <path>$['adviceResultCode']</path>
            <content>${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#adviceResultCode}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2618a341-9b7a-40eb-b49f-f395195db8f0" name="[finalDocumentationSuccess] is equal to &quot;${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#finalDocumentationSuccess}&quot;">
          <con:configuration>
            <path>$['finalDocumentationSuccess']</path>
            <content>${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#finalDocumentationSuccess}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="51b4531d-1c7b-4973-9d49-ae917b351f22" name="[finalDocumentationResultCode] is equal to &quot;${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#finalDocumentationResultCode}&quot;">
          <con:configuration>
            <path>$['finalDocumentationResultCode']</path>
            <content>${[Pre-Condition] [OTA5285] [3] Repair advice is calculated#finalDocumentationResultCode}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" id="8ce29ce6-effa-4f5a-855e-38955f2cbbde" name="[vehicleManifest.id] exists">
          <con:configuration>
            <path>$['vehicleManifest']['id']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="98691bf8-e66b-4653-ac00-a47aed8bb360" name="[vehicleManifest.fileName] is equal to &quot;${#TestCase#vehicleManifestFileName}&quot;">
          <con:configuration>
            <path>$['vehicleManifest']['fileName']</path>
            <content>${#TestCase#vehicleManifestFileName}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" id="567c77e8-3cff-4c8d-8e55-8f6d7b35e647" name="[configurationManifests[0].id] exists">
          <con:configuration>
            <path>$['configurationManifests'][0]['id']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8fa56f81-424d-492a-aff2-2e0f6e9fdf8b" name="[configurationManifests[0].id] is equal to ${#TestCase#configurationManifestFileName}">
          <con:configuration>
            <path>$['configurationManifests'][0]['fileName']</path>
            <content>${#TestCase#configurationManifestFileName}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="vehicleManifest" value="file:${#TestCase#vehicleManifestFilePath}"/>
          <con:entry key="changeMeasureCode" value="${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}"/>
          <con:entry key="adviceSuccess" value="true"/>
          <con:entry key="adviceResultCode" value="NEW VM AND CM"/>
          <con:entry key="finalDocumentationResultCode" value="REPAIR COMPLETE"/>
          <con:entry key="vin" value="${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"/>
          <con:entry key="finalDocumentationSuccess" value="true"/>
          <con:entry key="configurationManifests" value="file:${#TestCase#configurationManifestFilePath}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>adviceResultCode</con:entry>
          <con:entry>adviceSuccess</con:entry>
          <con:entry>changeMeasureCode</con:entry>
          <con:entry>configurationManifests</con:entry>
          <con:entry>finalDocumentationResultCode</con:entry>
          <con:entry>finalDocumentationSuccess</con:entry>
          <con:entry>vehicleManifest</con:entry>
          <con:entry>vin</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Pre-Condition] [OTA5285] [4] Repair advice is calculated - Check Vehicle Status" id="cdb62ba9-1017-42f6-a771-ec7ba0e692a3">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/campaigns/{actionCode}/{criterion}/{changeMeasureCode}/vehicles/{vin}/statuses" methodName="getCampaignVehicleStatusUpdates_1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Pre-Condition] [OTA5285] [4] Repair advice is calculated - Check Vehicle Status" id="02b4cb97-fdf9-4ccf-b80b-e24f46983017" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaigns/AX31/31/AXACM20231109233931/vehicles/AMV20231109233931/statuses</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="b8b0b406-1857-4d1b-94a0-1ec292f7f5c0" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>518146b1dd2e09b2</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 09 Nov 2023 21:48:41 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"518146b1dd2e09b2","date":"Thu, 09 Nov 2023 21:48:41 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="e721d787-d3ba-4baa-b3ee-c45d83892de0" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>518146b1dd2e09b2</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 09 Nov 2023 21:48:41 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"518146b1dd2e09b2","date":"Thu, 09 Nov 2023 21:48:41 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="changeMeasureCode" value="${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}"/>
          <con:entry key="criterion" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_criteria'][0]['criterion']}"/>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
          <con:entry key="vin" value="${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>actionCode</con:entry>
          <con:entry>changeMeasureCode</con:entry>
          <con:entry>criterion</con:entry>
          <con:entry>vin</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Pre-Condition] [OTA5285] [5] Repair advice is calculated - Check for UPDATING_NOTIFIED State" id="df40a8f5-921e-4c27-a1be-f1f7b2039be4">
    <con:settings/>
    <con:config>
      <script><![CDATA[import groovy.json.JsonSlurper

/* ---------- MAIN CODE ---------- */

//declare variables for the number of retries, seoconds in-between retries and loop counter
int numberOfRetries = context.expand('${#TestCase#vsNumberOfRetries}').toInteger()
int secondsBetweenRetries = context.expand('${#TestCase#vsSecondsBetweenRetries}').toInteger()
int i = 0

//declare variable for the API call name
String apiCallName = "[Pre-Condition] [OTA5285] [4] Repair advice is calculated - Check Vehicle Status"

//run disabled set-up test step to search for ReCall Action
//runTestCase(apiCallName)

//declare variable for the value of the [0].[newState] key
String newState = responseBody(apiCallName).newState[0]

//while the [0].[newState] key is different than "TUNING_DETECTION" , meaning the Vehicle is not yet in that state,, repeat the process
while (!newState.equals("UPDATING_NOTIFIED")) {
	if (i == numberOfRetries) {
		log.info("Validation for the Vehicle moving to UPDATING_NOTIFIED failed after " + numberOfRetries + " retries")
		throw new Exception("Validation for the Vehicle moving to UPDATING_NOTIFIED failed after " + numberOfRetries + " retries")
	}
	Thread.sleep(secondsBetweenRetries * 1000)
	log.info("Checking to see if the Vehicle moved to UPDATING_NOTIFIED - Attempt <<" + (i + 1) +">>")
	runTestCase(apiCallName)
	newState = responseBody(apiCallName).newState[0]
	i++
}

log.info("Vehicle <<" + context.expand( '${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$[\'vin\']}' ) + ">> moved to UPDATING_NOTIFIED")

//declare variable for the value of the [0].[updateId] key
String updateId = responseBody(apiCallName).updateId[0]

//set test case level property storing the value of the last update id
context.testCase.setPropertyValue("updateId", updateId)
log.info("Property <<updateId>> was set at test case level with value <<" + updateId + ">>")

/* ---------- CUSTOM METHODS ---------- */

public void runTestCase(String testCaseName) {
	testRunner.runTestStepByName(testCaseName)
}

public responseBody(String testCaseName) {
	return new JsonSlurper().parseText(testRunner.testCase.getTestStepByName(testCaseName).getPropertyValue("response"))
}]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [1]" id="33897407-dc7e-4c0b-9af6-5c9803e48ac4" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="groovy" name="[A_1] [APS] Download Vehicle Configuration With Configuration History" id="5c495ba5-bcc6-4692-a503-7cdd5a1f1bae">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By vehicleConfigurationPanel = By.id("vehicle_configurations_main")
By searchBox = By.xpath("//textarea[@placeholder='Enter VIN(s) to search for']")
By searchButton = By.xpath("//button[normalize-space()='Search']")
String vin = context.expand('${#TestCase#vin}') 
By vinEntry = By.xpath("//a[normalize-space()='" + vin + "']")
By downloadButton = By.xpath("//i[@class='fa fa-download']")
By includeHistoryCheckbox = By.xpath("//label[@for='includeHistory']")
By okButton = By.xpath("//button[normalize-space()='OK']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(vehicleConfigurationPanel)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Vehicle Configuration panel
try {
	driver.findElement(vehicleConfigurationPanel).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(searchButton)))
	log.info("[Action] [Passed] Click the Vehicle Configuration panel")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Vehicle Configuration panel | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Enter the VIN value in the search box
try {
	driver.findElement(searchBox).sendKeys(vin)
	log.info("[Action] [Passed] Enter the VIN value in the search box")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Enter the VIN value in the search box | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Search button
try {
	driver.findElement(searchButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(vinEntry))
	log.info("[Action] [Passed] Click the Search button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Search button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Download button
try {
	driver.findElement(downloadButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(includeHistoryCheckbox))
	log.info("[Action] [Passed] Click the Download button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Download button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Include Configuration History checkbox
try {
	driver.findElement(includeHistoryCheckbox).click()
	log.info("[Action] [Passed] Click the Include Configuration History checkbox")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Include Configuration History checkbox | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the OK button
try {
	driver.findElement(okButton).click()
	log.info("[Action] [Passed] Click the OK button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the OK button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [1] 30 Seconds" id="b7d33e61-f0ed-4401-bb32-2f2a982a5e1b">
    <con:settings/>
    <con:config>
      <delay>30000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_1] [APS] Check That Proper Logs Have Been Generated In Kibana" id="c1c9b2aa-505e-4c62-8a54-642937f5215d">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)
//declare variable for filter time window
String timeValue = "90"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "edrqa4b"
String expectedAction = "export"
String expectedApplicationName = "VCPort"
String expectedDescription = "Vehicle configuration history export"
String expectedEventId = "3,030,002"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "edrqa4b"
String expectedResult = "successful"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [2]" id="9e8db5d7-350d-4652-8057-d0ec03981739" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_2] [APS] [1] Fail To Download Vehicle Configuration With Configuration History" id="73b8085f-ac96-4321-9792-d9f847e3379d">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Configuration" resourcePath="/api/oru/vehicle_configurations/configurations/download" methodName="downloadVehicleConfigurations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_2] [APS] [1] Fail To Download Vehicle Configuration With Configuration History" id="23e8cec8-35be-46dc-a34f-62b7b16fb75c" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>["AMV0"]</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/vehicle_configurations/configurations/download</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="c328cfc5-8350-435b-9c97-5633d4862c3f">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="1ef0ad57-3d4f-4ff2-8d01-705aff93adad">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="ebd5ca09-3c9a-45b3-ba76-193b2733bc4b">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="5d1ae576-d7e4-4bf6-becc-285bb85b7bfa">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to&quot;Invalid JSON format&quot;" id="98c18aa9-f541-4252-9fb2-d33e4ca36324">
          <con:configuration>
            <path>$['message']</path>
            <content>"Invalid JSON format"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="a26271ef-c7ce-40be-9842-6b2aad35978e">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/vehicle_configurations/configurations/download&quot;" id="09d03fc7-826c-48a0-aa6e-9d92451f9602">
          <con:configuration>
            <path>$['path']</path>
            <content>"/vehicle_configurations/configurations/download"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="488e22f6-e9de-4394-9565-2bff419effb3">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="includeHistory" value="true"/>
          <con:entry key="includeMoseSignatures" value="false"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>includeHistory</con:entry>
          <con:entry>includeMoseSignatures</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_2] [APS] [2] Fail To Download Vehicle Configuration With Configuration History" id="f93a1f94-608a-4ce0-965c-e310d2fad7fc">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Configuration" resourcePath="/api/oru/vehicle_configurations/configurations/download" methodName="downloadVehicleConfigurations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_2] [APS] [2] Fail To Download Vehicle Configuration With Configuration History" id="23e8cec8-35be-46dc-a34f-62b7b16fb75c" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>["${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"]</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/vehicle_configurations/configurations/download</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="c328cfc5-8350-435b-9c97-5633d4862c3f">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="1ef0ad57-3d4f-4ff2-8d01-705aff93adad">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="ebd5ca09-3c9a-45b3-ba76-193b2733bc4b">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="5d1ae576-d7e4-4bf6-becc-285bb85b7bfa">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to &quot;Failed to convert value of type 'java.lang.String' to required type 'boolean'; Invalid boolean value []&quot;" id="98c18aa9-f541-4252-9fb2-d33e4ca36324">
          <con:configuration>
            <path>$['message']</path>
            <content>"Failed to convert value of type 'java.lang.String' to required type 'boolean'; Invalid boolean value []"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="a26271ef-c7ce-40be-9842-6b2aad35978e">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/vehicle_configurations/configurations/download&quot;" id="09d03fc7-826c-48a0-aa6e-9d92451f9602">
          <con:configuration>
            <path>$['path']</path>
            <content>"/vehicle_configurations/configurations/download"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="488e22f6-e9de-4394-9565-2bff419effb3">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="includeHistory" value="true"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>includeHistory</con:entry>
          <con:entry>includeMoseSignatures</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_2] [APS] [3] Fail To Download Vehicle Configuration With Configuration History" id="a5c17e36-6996-4129-84e0-fb6b16efdd4c">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Configuration" resourcePath="/api/oru/vehicle_configurations/configurations/download" methodName="downloadVehicleConfigurations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_2] [APS] [3] Fail To Download Vehicle Configuration With Configuration History" id="23e8cec8-35be-46dc-a34f-62b7b16fb75c" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/vehicle_configurations/configurations/download</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="9294cc6a-db36-4c53-8444-2453ca048d8b">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="ad6636eb-9b06-4eb7-8aa4-87e4159dc35c">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="1f725bc9-1e39-4330-9a21-8810c4f57d87">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="8469cc8a-3ab1-4540-a466-04e0e266164b">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to&quot;Invalid format&quot;" id="149d44fa-8f62-4766-bb85-ae4a284f4dc2">
          <con:configuration>
            <path>$['message']</path>
            <content>"Invalid format"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="141db229-86b0-4f02-93cd-9718e4f787a7">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/vehicle_configurations/configurations/download&quot;" id="97d34fe8-4023-48a9-bccb-cc48563fdb00">
          <con:configuration>
            <path>$['path']</path>
            <content>"/vehicle_configurations/configurations/download"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="2e64082f-d27a-4cc9-b3c3-d013f9690647">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="includeHistory" value="true"/>
          <con:entry key="includeMoseSignatures" value="false"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>includeHistory</con:entry>
          <con:entry>includeMoseSignatures</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [2] 30 Seconds" id="7b5ab4c2-d4cc-4cb6-baca-ccdb214bd0fc">
    <con:settings/>
    <con:config>
      <delay>30000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_2] [APS] Check That Proper Logs Have Been Generated In Kibana For The Three Actions" id="c20a6220-f217-4621-87a8-c2fcb1d301f9">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "90"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "f5iu619"
String expectedAction = "export"
String expectedApplicationName = "VCPort"
String expectedDescription = "Vehicle configuration history export"
String expectedEventId = "3,030,001"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "f5iu619"
String expectedResult = "failed"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)
				
//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By firstExpandButton = By.xpath("//tbody/tr[1]/td[1]/button[1]/span[1]/span[1]")
By secondExpandButton = By.xpath("//tbody/tr[3]/td[1]/button[1]/span[1]/span[1]")
By thirdExpandButton = By.xpath("//tbody/tr[5]/td[1]/button[1]/span[1]/span[1]")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(firstExpandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Expand button
try {
	driver.findElement(firstExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the first Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the first Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the first Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Go back
try {
	driver.navigate().back();
	wait.until(ExpectedConditions.presenceOfElementLocated(secondExpandButton))
	log.info("[Action] [Passed] Go back")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Go back | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Expand button
try {
	driver.findElement(secondExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the second Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the second Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the second Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Go back
try {
	driver.navigate().back();
	wait.until(ExpectedConditions.presenceOfElementLocated(secondExpandButton))
	log.info("[Action] [Passed] Go back")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Go back | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the third Expand button
try {
	driver.findElement(thirdExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the third Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the third Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the third Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the third Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the third Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the third Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [3]" id="0db843e4-7e70-43e7-a17d-2240a2318657" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="groovy" name="[A_3] [APS] Download Vehicle Configuration Without Configuration History" id="8687e59c-d2e3-4a58-9b28-6b6c291e9668">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By vehicleConfigurationPanel = By.id("vehicle_configurations_main")
By searchBox = By.xpath("//textarea[@placeholder='Enter VIN(s) to search for']")
By searchButton = By.xpath("//button[normalize-space()='Search']")
String vin = context.expand('${#TestCase#vin}') 
By vinEntry = By.xpath("//a[normalize-space()='" + vin + "']")
By downloadButton = By.xpath("//i[@class='fa fa-download']")
By okButton = By.xpath("//button[normalize-space()='OK']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(vehicleConfigurationPanel)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Vehicle Configuration panel
try {
	driver.findElement(vehicleConfigurationPanel).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(searchButton)))
	log.info("[Action] [Passed] Click the Vehicle Configuration panel")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Vehicle Configuration panel | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Enter the VIN value in the search box
try {
	driver.findElement(searchBox).sendKeys(vin)
	log.info("[Action] [Passed] Enter the VIN value in the search box")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Enter the VIN value in the search box | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Search button
try {
	driver.findElement(searchButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(vinEntry))
	log.info("[Action] [Passed] Click the Search button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Search button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Download button
try {
	driver.findElement(downloadButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(okButton))
	log.info("[Action] [Passed] Click the Download button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Download button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the OK button
try {
	driver.findElement(okButton).click()
	log.info("[Action] [Passed] Click the OK button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the OK button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [3] 30 Seconds" id="7c87e71f-84b6-4f49-ab72-e015e3b6f1e3">
    <con:settings/>
    <con:config>
      <delay>30000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_3] [APS] Check That Proper Logs Have Been Generated In Kibana" id="f9273272-8067-4434-a2fa-e5bd9fa141ed">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "90"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "edrqa4b"
String expectedAction = "export"
String expectedApplicationName = "VCPort"
String expectedDescription = "Vehicle configuration history export"
String expectedEventId = "3,030,002"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "edrqa4b"
String expectedResult = "successful"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [4]" id="254ec579-7840-4878-a9a2-704f095580ea" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_4] [APS] [1] Fail To Download Vehicle Configuration Without Configuration History" id="a1512e2b-8f93-4a3b-a666-c99a2eed9703">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Configuration" resourcePath="/api/oru/vehicle_configurations/configurations/download" methodName="downloadVehicleConfigurations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_4] [APS] [1] Fail To Download Vehicle Configuration Without Configuration History" id="23e8cec8-35be-46dc-a34f-62b7b16fb75c" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>["AMV0"]</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/vehicle_configurations/configurations/download</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="c328cfc5-8350-435b-9c97-5633d4862c3f">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="1ef0ad57-3d4f-4ff2-8d01-705aff93adad">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="ebd5ca09-3c9a-45b3-ba76-193b2733bc4b">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="5d1ae576-d7e4-4bf6-becc-285bb85b7bfa">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to&quot;Invalid JSON format&quot;" id="98c18aa9-f541-4252-9fb2-d33e4ca36324">
          <con:configuration>
            <path>$['message']</path>
            <content>"Invalid JSON format"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="a26271ef-c7ce-40be-9842-6b2aad35978e">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/vehicle_configurations/configurations/download&quot;" id="09d03fc7-826c-48a0-aa6e-9d92451f9602">
          <con:configuration>
            <path>$['path']</path>
            <content>"/vehicle_configurations/configurations/download"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="488e22f6-e9de-4394-9565-2bff419effb3">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="includeHistory" value="false"/>
          <con:entry key="includeMoseSignatures" value="false"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>includeHistory</con:entry>
          <con:entry>includeMoseSignatures</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_4] [APS] [2] Fail To Download Vehicle Configuration Without Configuration History" id="a9ba2d02-7469-4dc4-ab62-76ad71559cd7">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Configuration" resourcePath="/api/oru/vehicle_configurations/configurations/download" methodName="downloadVehicleConfigurations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_4] [APS] [2] Fail To Download Vehicle Configuration Without Configuration History" id="23e8cec8-35be-46dc-a34f-62b7b16fb75c" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>["${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"]</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/vehicle_configurations/configurations/download</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="c328cfc5-8350-435b-9c97-5633d4862c3f">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="1ef0ad57-3d4f-4ff2-8d01-705aff93adad">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="ebd5ca09-3c9a-45b3-ba76-193b2733bc4b">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="5d1ae576-d7e4-4bf6-becc-285bb85b7bfa">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to &quot;Failed to convert value of type 'java.lang.String' to required type 'boolean'; Invalid boolean value []&quot;" id="98c18aa9-f541-4252-9fb2-d33e4ca36324">
          <con:configuration>
            <path>$['message']</path>
            <content>"Failed to convert value of type 'java.lang.String' to required type 'boolean'; Invalid boolean value []"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="a26271ef-c7ce-40be-9842-6b2aad35978e">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/vehicle_configurations/configurations/download&quot;" id="09d03fc7-826c-48a0-aa6e-9d92451f9602">
          <con:configuration>
            <path>$['path']</path>
            <content>"/vehicle_configurations/configurations/download"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="488e22f6-e9de-4394-9565-2bff419effb3">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="includeHistory" value="false"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>includeHistory</con:entry>
          <con:entry>includeMoseSignatures</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_4] [APS] [3] Fail To Download Vehicle Configuration Without Configuration History" id="eb484bc5-f1a6-4174-b655-e478bfe35c93">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Configuration" resourcePath="/api/oru/vehicle_configurations/configurations/download" methodName="downloadVehicleConfigurations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_4] [APS] [3] Fail To Download Vehicle Configuration Without Configuration History" id="23e8cec8-35be-46dc-a34f-62b7b16fb75c" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/vehicle_configurations/configurations/download</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="9294cc6a-db36-4c53-8444-2453ca048d8b">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="ad6636eb-9b06-4eb7-8aa4-87e4159dc35c">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="1f725bc9-1e39-4330-9a21-8810c4f57d87">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="8469cc8a-3ab1-4540-a466-04e0e266164b">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to&quot;Invalid format&quot;" id="149d44fa-8f62-4766-bb85-ae4a284f4dc2">
          <con:configuration>
            <path>$['message']</path>
            <content>"Invalid format"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="141db229-86b0-4f02-93cd-9718e4f787a7">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/vehicle_configurations/configurations/download&quot;" id="97d34fe8-4023-48a9-bccb-cc48563fdb00">
          <con:configuration>
            <path>$['path']</path>
            <content>"/vehicle_configurations/configurations/download"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="2e64082f-d27a-4cc9-b3c3-d013f9690647">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="includeHistory" value="false"/>
          <con:entry key="includeMoseSignatures" value="false"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>includeHistory</con:entry>
          <con:entry>includeMoseSignatures</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [4] 30 Seconds" id="22580fd3-2b4c-478b-a0e8-9e175e13266b">
    <con:settings/>
    <con:config>
      <delay>30000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_4] [APS] Check That Proper Logs Have Been Generated In Kibana For The Three Actions" id="ad0a7e4f-bae9-4192-942f-3ea53213b733">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "90"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "f5iu619"
String expectedAction = "export"
String expectedApplicationName = "VCPort"
String expectedDescription = "Vehicle configuration history export"
String expectedEventId = "3,030,001"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "f5iu619"
String expectedResult = "failed"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)
				
//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By firstExpandButton = By.xpath("//tbody/tr[1]/td[1]/button[1]/span[1]/span[1]")
By secondExpandButton = By.xpath("//tbody/tr[3]/td[1]/button[1]/span[1]/span[1]")
By thirdExpandButton = By.xpath("//tbody/tr[5]/td[1]/button[1]/span[1]/span[1]")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(firstExpandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Expand button
try {
	driver.findElement(firstExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the first Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the first Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the first Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Go back
try {
	driver.navigate().back();
	wait.until(ExpectedConditions.presenceOfElementLocated(secondExpandButton))
	log.info("[Action] [Passed] Go back")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Go back | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Expand button
try {
	driver.findElement(secondExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the second Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the second Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the second Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Go back
try {
	driver.navigate().back();
	wait.until(ExpectedConditions.presenceOfElementLocated(secondExpandButton))
	log.info("[Action] [Passed] Go back")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Go back | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the third Expand button
try {
	driver.findElement(thirdExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the third Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the third Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the third Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the third Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the third Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the third Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [5]" id="fc0b45b7-34f4-4cee-91dc-e03be8ba3f14" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="groovy" name="[A_5] [CARBP] Download Search Results" id="31dbc760-c2fb-4c45-8593-214205024320">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By carbPortPanel = By.xpath("//a[normalize-space()='CARB Port']")
By vinBox = By.id("vin")
By searchVehicleButton = By.xpath("//button[normalize-space()='Search Vehicle']")
String vin = context.expand('${#TestCase#vin}') 
By vinEntry = By.xpath("//a[normalize-space()='" + vin + "']")
By downloadSearchResultButton = By.xpath("//button[normalize-space()='Download Search Result']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(carbPortPanel)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the CARB Port panel
try {
	driver.findElement(carbPortPanel).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(vinBox)))
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(searchVehicleButton)))
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(downloadSearchResultButton)))
	log.info("[Action] [Passed] Click the Vehicle Updates panel")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Vehicle Updates panel | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

/*
//Action - Enter the VIN value in the VIN input box
try {
	driver.findElement(vinBox).sendKeys(vin)
	log.info("[Action] [Passed] Enter the VIN value in the VIN input box")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Enter the VIN value in the VIN input box | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Search Vehicle button
try {
	driver.findElement(searchVehicleButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(vinEntry))
	log.info("[Action] [Passed] Click the Search Vehicle button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Search Vehicle button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}
*/

//Action - Click the Download Search Result button
try {
	driver.findElement(downloadSearchResultButton).click()
	log.info("[Action] [Passed] Click the Download Search Result button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Download Search Result button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit()

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [5] 30 Seconds" id="5d7b3f26-dca7-4dd2-95d7-53426ec95488">
    <con:settings/>
    <con:config>
      <delay>30000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_5] [CARBP] Check That Proper Logs Have Been Generated In Kibana" id="82cd1a86-1c57-4094-a0bf-9cc6a192e594">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "90"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "edrqa4b"
String expectedAction = "export"
String expectedApplicationName = "CARB"
String expectedDescription = "CARB data download"
String expectedEventId = "3,030,002"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "edrqa4b"
String expectedResult = "successful"

String url = context.expand('${#TestCase#altUrl}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName.replace(" ", "%20"))
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [6]" id="e59514e1-e4e2-4452-94bb-957e7141199c" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_6] [CARBP] Fail To Download Search Results" id="f6ecc0d8-1302-4c29-a7be-621f7e5fa3d3">
    <con:settings/>
    <con:config service="CARB Port" resourcePath="/carb/data/searches/export" methodName="exportCarbData" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_6] [CARBP] Fail To Download Search Results" id="be23ef00-744e-4149-8d01-3e4c7113c9bc" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com/api/oru</con:endpoint>
        <con:request>{
   "columns":[
      "vin",
      "referenceId",
      "brand",
      "updateId",
      "uploadTimestamp",
      "dispatchTime",
      "uploadData",
      "error"
   ],
   "columnConditions":[
      {
         "column":"vin",
         "operator":"containsIgnoringCase",
         "value": 
      }
   ],
   "sortDirection":"desc",
   "count":true,
   "start":0,
   "sortBy":"uploadTimestamp"
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/carb/data/searches/export</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="0893c2c0-1a2a-43af-920d-8f4baa0df150">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="de512efb-5cf1-4cae-8fee-cee78f1098db">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="f6cbc458-933b-4d9e-b409-225c3d4a2dd1">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="897e133d-9695-495b-bc54-3b9e95b6a0aa">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to&quot;Invalid format&quot;" id="dcad3421-7c22-4088-bb61-92724287f4f7">
          <con:configuration>
            <path>$['message']</path>
            <content>"Invalid format"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="5d757c7e-3483-4e19-ac3c-33f32cfed051">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/carb/data/searches/export&quot;" id="6461f06d-4da8-44b7-bd6e-198c3e0c723c">
          <con:configuration>
            <path>$['path']</path>
            <content>"/carb/data/searches/export"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="4fae66b9-80d8-434a-8905-4db3ade44a5e">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [6] 30 Seconds" id="299a8744-7f55-4952-a0d4-0e6180bea0a9">
    <con:settings/>
    <con:config>
      <delay>30000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_6] [CARBP] Check That Proper Logs Have Been Generated In Kibana" id="f5d3a486-5654-47ca-9958-51b0441c2220">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "90"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "f5iu619"
String expectedAction = "export"
String expectedApplicationName = "CARB"
String expectedDescription = "CARB data download"
String expectedEventId = "3,030,001"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "f5iu619"
String expectedResult = "failed"

String url = context.expand('${#TestCase#altUrl}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName.replace(" ", "%20"))
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [7]" id="ab96fc22-678f-4355-b686-fd209a852a7a" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="groovy" name="[A_7] [APS] Read Vehicle Configuration" id="f612b455-ea04-444e-91b9-1da34b5f44ae">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By apsCampaignsPanel = By.id("campaign_main")
String vin = context.expand('${#TestCase#vin}') 
By vinEntry = By.xpath("//a[normalize-space()='" + vin + "']")
By vehicleStatusIcon = By.xpath("//span[@class='badge badge-pill campaignVehicle updatingnotified']")
String configurationHash = context.expand('${#TestCase#configurationHash}') 
By configurationHashLink = By.xpath("//a[contains(text(),'" + configurationHash + "')]")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(apsCampaignsPanel)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the VIN page from the Campaign Set
try {
	driver.get("https://demo.orunext.com/#/otaupdate/campaigns/detail/" + context.expand('${#TestCase#campaignID}') + "/" + context.expand('${#TestCase#criterion}') + "/" + context.expand('${#TestCase#code}') + "/" + vin)
	wait.until(ExpectedConditions.presenceOfElementLocated(vehicleStatusIcon))
	wait.until(ExpectedConditions.presenceOfElementLocated(configurationHashLink))
	log.info("[Action] [Passed] Open the VIN page from the Campaign Set")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the VIN page from the Campaign Set | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [7] 6 Minutes" id="44654b52-c84b-4075-8eca-61908f55fc6b">
    <con:settings/>
    <con:config>
      <delay>360000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_7] [APS] Check That Proper Logs Have Been Generated In Kibana" id="f9f856e3-69a2-4125-b103-8d859c3682b6">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "420"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "edrqa4b"
String expectedAction = "read"
String expectedApplicationName = "APS"
String expectedDescription = "VC retrieval"
String expectedEventId = "3,030,004"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "edrqa4b"
String expectedResult = "successful"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [8]" id="d162db36-7a70-44f3-8e13-0d4372f27632" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_8] [APS] Fail To Read Vehicle Configuration" id="19eb4e1e-1550-42d3-aa79-5af5d4801234">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/vehicles/{vin}/configuration" methodName="getVehicleLatestConfiguration" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest id="f9ed53f1-d8fb-47d4-b305-9bdcd9d4b424" mediaType="application/json" name="[A_8] [APS] Fail To Read Vehicle Configuration">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>http://oru-ui.dev.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/vehicles/AMV20240229123309/configuration</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="90fdb013-dc36-40bd-a9d8-d4d67dcc32ae" name="Status Line is equal to &quot;HTTP/1.1 404 Not Found&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="0c6dc9b5-3ff0-4bf3-9b53-7ab7739e1492" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="58f12c0d-89bc-432b-a7ab-8cac2714632b" name="[status] is equal to &quot;404&quot;">
          <con:configuration>
            <path>$['status']</path>
            <content>404</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="585988ac-0add-450f-8f98-6c6cd6a03ba6" name="[error] is equal to &quot;Not Found&quot;">
          <con:configuration>
            <path>$['error']</path>
            <content>"Not Found"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="17267a44-d43f-4265-97d1-863ef4048f56" name="[message] is equal to &quot;Cannot find vehicle&quot;">
          <con:configuration>
            <path>$['message']</path>
            <content>"Cannot find vehicle"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" id="6b38962e-31cd-4b86-b2db-aa2f7f862aee" name="[ref] exists">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="45fd9b33-e8f8-4ace-b285-4c4ee1d61133" name="[path] is equal to &quot;/aps_campaigns/vehicles/${[A_8] [APS] Fail To Read Vehicle Configuration#vin}/configuration&quot;">
          <con:configuration>
            <path>$['path']</path>
            <content>"/aps_campaigns/vehicles/${[A_8] [APS] Fail To Read Vehicle Configuration#vin}/configuration"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="cf573ec5-6542-4d8d-b418-a41ed4eed4ac" name="[timestamp] contains the current date">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="vin" value="AMV00000000000000"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>vin</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [8] 6 Minutes" id="ac673048-f0ba-4e54-a38f-cfddd0750630">
    <con:settings/>
    <con:config>
      <delay>360000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_8] [APS] Check That Proper Logs Have Been Generated In Kibana" id="55571fd7-3028-4626-bc4b-78fdbe5d1006">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "420"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "f5iu619"
String expectedAction = "read"
String expectedApplicationName = "APS"
String expectedDescription = "VC retrieval"
String expectedEventId = "3,030,003"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "f5iu619"
String expectedResult = "failed"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [9]" id="dfd43ffd-a2c3-4655-a746-852306f08976" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="groovy" name="[A_9] [APS] Read Vehicle Manifest Two Ways" id="b9a0ff4c-5540-4405-92c6-d5c403a7f250">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot
import org.openqa.selenium.JavascriptExecutor

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)
JavascriptExecutor scriptExecutor = (JavascriptExecutor) driver

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By apsCampaignsPanel = By.id("campaign_main")
By campaignStatusIcon = By.xpath("//span[contains(@class, 'badge badge-pill accepted') and text() = 'RUNNING']")
By vehicleStatusIcon = By.xpath("//span[@class='badge badge-pill campaignVehicle updatingnotified']")
String vin = context.expand('${#TestCase#vin}') 
By vinEntry = By.xpath("//a[normalize-space()='" + vin + "']")
String configurationHash = context.expand('${#TestCase#configurationHash}') 
By configurationHashLink = By.xpath("//a[contains(text(),'" + configurationHash + "')]")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(apsCampaignsPanel)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Campaign Set page
try {
	driver.get("https://demo.orunext.com/#/otaupdate/campaigns/detail/" + context.expand('${#TestCase#campaignID}') + "/" + context.expand('${#TestCase#criterion}') + "/" + context.expand('${#TestCase#code}'))
	wait.until(ExpectedConditions.presenceOfElementLocated(campaignStatusIcon))
	log.info("[Action] [Passed] Open the Campaign Set page")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Campaign Set page | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the VIN link
try {
	WebElement vinLink = driver.findElement(vinEntry)
	scriptExecutor.executeScript("arguments[0].scrollIntoView();", wait.until(ExpectedConditions.elementToBeClickable(vinLink)))
	scriptExecutor.executeScript("arguments[0].click()", vinLink)
	wait.until(ExpectedConditions.presenceOfElementLocated(vehicleStatusIcon))
	wait.until(ExpectedConditions.presenceOfElementLocated(configurationHashLink))
	log.info("[Action] [Passed] Click the Campaign Set link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Campaign Set link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [9] 6 Minutes" id="083339b7-65ee-4af3-af5d-a57a074f309b">
    <con:settings/>
    <con:config>
      <delay>360000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_9] [APS] Check That Proper Logs Have Been Generated In Kibana For Both Actions" id="b959faaf-a493-49de-9c3f-6bfdcfd717b9">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "420"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "edrqa4b"
String expectedAction = "read"
String expectedApplicationName = "APS"
String expectedDescription = "Update manifests retrieval"
String expectedEventId = "3,030,004"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "edrqa4b"
String expectedResult = "successful"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By firstExpandButton = By.xpath("//tbody/tr[1]/td[1]/button[1]/span[1]/span[1]")
By secondExpandButton = By.xpath("//tbody/tr[3]/td[1]/button[1]/span[1]/span[1]")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(firstExpandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Expand button
try {
	driver.findElement(firstExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the first Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the first Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the first Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Go back
try {
	driver.navigate().back();
	wait.until(ExpectedConditions.presenceOfElementLocated(secondExpandButton))
	log.info("[Action] [Passed] Go back")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Go back | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Expand button
try {
	driver.findElement(secondExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the second Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the second Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the second Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [10]" id="21d30c8f-8808-4a83-ab86-d1594b3b9fc4" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_10] [APS] [1] Fail To Read Vehicle Manifest" id="ee062b5c-a05f-4619-9cdc-444c22d807a2">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/campaigns/{actionCode}/{criterion}/{changeMeasureCode}/manifests" methodName="listManifests_1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_10] [APS] [1] Fail To Read Vehicle Manifest" id="04aa1f41-e163-4a4a-b781-5b2276cd61a3" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaigns/manifests</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 404 Not Found&quot;" id="1555882d-e035-4baf-a360-73f7283ed7cf">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="ae739148-ae9d-498a-9ec6-6cd69fb6fcfa">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;404&quot;" id="8b0929a1-bfaa-4abc-81ee-ed124c4131e1">
          <con:configuration>
            <path>$['status']</path>
            <content>404</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Not Found&quot;" id="8d72a2df-cf6c-45c5-98e8-65d0452df70f">
          <con:configuration>
            <path>$['error']</path>
            <content>"Not Found"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to &quot;Campaign with action code: ${[A_10] [APS] [1] Fail To Read Vehicle Manifest#actionCode}, criterion: ${[A_10] [APS] [1] Fail To Read Vehicle Manifest#criterion} and change measure code: ${[A_10] [APS] [1] Fail To Read Vehicle Manifest#changeMeasureCode} not found&quot;" id="fe4823ea-03c5-40c1-8c66-a18cece2cb92">
          <con:configuration>
            <path>$['message']</path>
            <content>"Campaign with action code: ${[A_10] [APS] [1] Fail To Read Vehicle Manifest#actionCode}, criterion: ${[A_10] [APS] [1] Fail To Read Vehicle Manifest#criterion} and change measure code: ${[A_10] [APS] [1] Fail To Read Vehicle Manifest#changeMeasureCode} not found"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="f728c4ff-7eb5-44b7-9404-7be1829bd914">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/aps_campaigns/campaigns/${[A_10] [APS] [1] Fail To Read Vehicle Manifest#actionCode}/${[A_10] [APS] [1] Fail To Read Vehicle Manifest#criterion}/${[A_10] [APS] [1] Fail To Read Vehicle Manifest#changeMeasureCode}/manifests&quot;" id="75a3030b-f3d1-4ced-962e-a53ef1b0a283">
          <con:configuration>
            <path>$['path']</path>
            <content>"/aps_campaigns/campaigns/${[A_10] [APS] [1] Fail To Read Vehicle Manifest#actionCode}/${[A_10] [APS] [1] Fail To Read Vehicle Manifest#criterion}/${[A_10] [APS] [1] Fail To Read Vehicle Manifest#changeMeasureCode}/manifests"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="83079122-7a67-45e3-abe6-ef9b525c3d7f">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="changeMeasureCode" value="AMC00000000000000"/>
          <con:entry key="criterion" value="00"/>
          <con:entry key="actionCode" value="AR00"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>actionCode</con:entry>
          <con:entry>changeMeasureCode</con:entry>
          <con:entry>criterion</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_10] [APS] [2] Fail To Read Vehicle Manifest" id="63fd6d5e-ca99-4526-8e05-a9b4a1b84456">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/campaigns/{actionCode}/{criterion}/{changeMeasureCode}/vehicles/{vin}/manifests" methodName="listManifestsForVehicle_1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_10] [APS] [2] Fail To Read Vehicle Manifest" id="8435431c-3b19-46bf-90af-1aef315bfb9c" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/campaigns/AR09/09/ACM20240229123308/vehicles/AMV20240229123309/manifests</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 404 Not Found&quot;" id="8fc10bf8-2047-4920-9861-0ff863633c8f">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="e4d0cc7e-dcdb-4599-acd3-6eaa6f50b02a">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;404&quot;" id="575d43f2-7285-4220-ba98-b53456389c27">
          <con:configuration>
            <path>$['status']</path>
            <content>404</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Not Found&quot;" id="4fa06f87-d966-4023-af5c-f13229e33716">
          <con:configuration>
            <path>$['error']</path>
            <content>"Not Found"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to &quot;Campaign with action code: ${[A_10] [APS] [2] Fail To Read Vehicle Manifest#actionCode}, criterion: ${[A_10] [APS] [2] Fail To Read Vehicle Manifest#criterion} and change measure code: ${[A_10] [APS] [2] Fail To Read Vehicle Manifest#changeMeasureCode} not found&quot;" id="830a58e4-f9b7-4d12-945d-bf8c77bd6040">
          <con:configuration>
            <path>$['message']</path>
            <content>"Campaign with action code: ${[A_10] [APS] [2] Fail To Read Vehicle Manifest#actionCode}, criterion: ${[A_10] [APS] [2] Fail To Read Vehicle Manifest#criterion} and change measure code: ${[A_10] [APS] [2] Fail To Read Vehicle Manifest#changeMeasureCode} not found"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="683d76f7-a748-4274-84eb-4c209464112f">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/aps_campaigns/campaigns/${[A_10] [APS] [2] Fail To Read Vehicle Manifest#actionCode}/${[A_10] [APS] [2] Fail To Read Vehicle Manifest#criterion}/${[A_10] [APS] [2] Fail To Read Vehicle Manifest#changeMeasureCode}/vehicles/${[A_10] [APS] [2] Fail To Read Vehicle Manifest#vin}/manifests&quot;" id="42a97566-6771-4877-a880-6e1613e7ea46">
          <con:configuration>
            <path>$['path']</path>
            <content>"/aps_campaigns/campaigns/${[A_10] [APS] [2] Fail To Read Vehicle Manifest#actionCode}/${[A_10] [APS] [2] Fail To Read Vehicle Manifest#criterion}/${[A_10] [APS] [2] Fail To Read Vehicle Manifest#changeMeasureCode}/vehicles/${[A_10] [APS] [2] Fail To Read Vehicle Manifest#vin}/manifests"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="361dc8b1-1456-4aa3-989e-5af13de2fa46">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="changeMeasureCode" value="AMC00000000000000"/>
          <con:entry key="criterion" value="00"/>
          <con:entry key="vin" value="AMV00000000000000"/>
          <con:entry key="actionCode" value="AR00"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>actionCode</con:entry>
          <con:entry>changeMeasureCode</con:entry>
          <con:entry>criterion</con:entry>
          <con:entry>vin</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [10] 6 Minutes" id="cc6b12c2-59d2-413b-b6bb-539079bd83e2">
    <con:settings/>
    <con:config>
      <delay>360000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_10] [APS] Check That Proper Logs Have Been Generated In Kibana For Both Actions" id="e63fccd3-7232-4568-8194-23ab1b1403af">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "420"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "f5iu619"
String expectedAction = "read"
String expectedApplicationName = "APS"
String expectedDescription = "Update manifests retrieval"
String expectedEventId = "3,030,003"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "f5iu619"
String expectedResult = "failed"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By firstExpandButton = By.xpath("//tbody/tr[1]/td[1]/button[1]/span[1]/span[1]")
By secondExpandButton = By.xpath("//tbody/tr[3]/td[1]/button[1]/span[1]/span[1]")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(firstExpandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Expand button
try {
	driver.findElement(firstExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the first Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the first Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the first Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Go back
try {
	driver.navigate().back();
	wait.until(ExpectedConditions.presenceOfElementLocated(secondExpandButton))
	log.info("[Action] [Passed] Go back")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Go back | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Expand button
try {
	driver.findElement(secondExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the second Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the second Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the second Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [11]" id="fb2d3d94-ef93-4366-b58c-6a8ffebda8b2" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="groovy" name="[A_11] [APS] Read Vehicle Overview Details" id="ea799288-bbab-4285-aa7e-c9cea0eb9ca7">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By vehicleConfigurationPanel = By.id("vehicle_configurations_main")
By detailsLink = By.xpath("//a[normalize-space()='Details']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(vehicleConfigurationPanel)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the VIN Details Page
try {
	driver.get("https://demo.orunext.com/#/otaupdate/vehicle-management/vehicle-detail/" + context.expand('${#TestCase#vin}') )
	wait.until(ExpectedConditions.presenceOfElementLocated(detailsLink))
	log.info("[Action] [Passed] Open the VIN Details Page")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the VIN Details Page | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [11] 2 Minutes" id="992ef2ab-5578-46ae-b536-12461669614b">
    <con:settings/>
    <con:config>
      <delay>120000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_11] [APS] Check That Proper Logs Have Been Generated In Kibana" id="49c0367a-00ca-419c-865d-b1b4add98c4c">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "180"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "edrqa4b"
String expectedAction = "read"
String expectedApplicationName = "APS"
String expectedDescription = "Vehicle updates overview retrieval"
String expectedEventId = "3,030,004"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "edrqa4b"
String expectedResult = "successful"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [12]" id="d743a1f0-0500-444c-b045-80521b6bb189" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_12] [APS] Fail To Read Vehicle Overview Details" id="bcd0f907-25b7-44ea-b488-6ced9485268e">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/vehicles/{vin}/details/campaign_updates" methodName="getVehicleDetailCampaignUpdates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_12] [APS] Fail To Read Vehicle Overview Details" id="ad8e584d-d908-4aa1-b856-42770357f4b4" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/vehicles/AMV20240229123309%20/details/campaign_updates</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 404 Not Found&quot;" id="3ac1b4f4-2e8a-4204-98cc-aacbdbefa639" disabled="true">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="cad8099b-0e7a-40b1-ba7a-f74d2926df13">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="d46475b5-7cec-44fc-9214-e986e78cf834">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;404&quot;" id="b295f76c-8057-4759-ba56-920b35afc60e" disabled="true">
          <con:configuration>
            <path>$['status']</path>
            <content>404</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="8ba03b2e-4ac1-4b8b-8dda-ae9a43d0182e">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Not Found&quot;" id="f041e4bc-7133-4390-9473-dba5a6d421d2" disabled="true">
          <con:configuration>
            <path>$['error']</path>
            <content>"Not Found"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="2b611e7e-b890-4552-b8bc-2b7f1bd64ac4">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to &quot;Cannot find vehicle&quot;" id="2f4eb1c4-b529-4f8d-80d3-dacaf5aa2660" disabled="true">
          <con:configuration>
            <path>$['message']</path>
            <content>"Cannot find vehicle"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to &quot;Invalid JSON format&quot;" id="0c44c52d-c7db-4444-a89a-8a9b72c06e14">
          <con:configuration>
            <path>$['message']</path>
            <content>"Invalid JSON format"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="037eebda-2b3c-4d22-89d8-3f83769dc2cd">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/aps_campaigns/vehicles/${[A_12] [APS] Fail To Read Vehicle Overview Details#vin}/configuration&quot;" id="6735a9fb-df6e-4fc0-bd50-93aa98d3b30a" disabled="true">
          <con:configuration>
            <path>$['path']</path>
            <content>"/aps_campaigns/vehicles/${[A_12] [APS] Fail To Read Vehicle Overview Details#vin}/configuration"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/aps_campaigns/vehicles/${[A_12] [APS] Fail To Read Vehicle Overview Details#vin}/details/campaign_updates&quot;" id="2c667738-2195-460a-871f-b8ada12ad20e">
          <con:configuration>
            <path>$['path']</path>
            <content>"/aps_campaigns/vehicles/${[A_12] [APS] Fail To Read Vehicle Overview Details#vin}/details/campaign_updates"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="dc9d4415-8edd-4e93-b88f-d91944c40bd8">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="vin" value="AMV0"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>vin</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [12] 2 Minutes" id="120f2735-cc4a-493e-8f51-84f2c3f868b3">
    <con:settings/>
    <con:config>
      <delay>120000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_12] [APS] Check That Proper Logs Have Been Generated In Kibana" id="553e2d94-a224-4bc7-8f7d-c44895d76b0e">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)
//declare variable for filter time window
String timeValue = "180"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "f5iu619"
String expectedAction = "read"
String expectedApplicationName = "APS"
String expectedDescription = "Vehicle updates overview retrieval"
String expectedEventId = "3,030,003"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "f5iu619"
String expectedResult = "failed"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [13]" id="ecc870f7-21fe-4025-b390-ca1154800df1" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="groovy" name="[A_13] [APS] Read Vehicle Details Two Ways" id="5034c734-ae09-48b6-b6e0-f92c6208c94a">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By vehicleConfigurationPanel = By.id("vehicle_configurations_main")
String vin = context.expand('${#TestCase#vin}') 
By detailsLink = By.xpath("//a[normalize-space()='Details']")
By vinValueField = By.xpath("//td[normalize-space()='" + vin + "']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(vehicleConfigurationPanel)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the VIN Details Page
try {
	driver.get("https://demo.orunext.com/#/otaupdate/vehicle-management/vehicle-detail/" + vin)
	wait.until(ExpectedConditions.presenceOfElementLocated(detailsLink))
	log.info("[Action] [Passed] Open the VIN Details Page")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the VIN Details Page | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Details link
try {
	driver.findElement(detailsLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(vinValueField))
	log.info("[Action] [Passed] Click the Details link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Details link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [13] 5 Minutes" id="c42b9768-549f-4916-b6e3-94bede88eb07">
    <con:settings/>
    <con:config>
      <delay>300000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_13] [APS] Check That Proper Logs Have Been Generated In Kibana For Both Actions" id="3c53ab9f-f211-4c14-9f43-abeadc5a21d7">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)
//declare variable for filter time window
String timeValue = "360"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "edrqa4b"
String expectedAction = "read"
String expectedApplicationName = "APS"
String expectedDescription = "Vehicles details retrieval"
String expectedEventId = "3,030,004"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "edrqa4b"
String expectedResult = "successful"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By firstExpandButton = By.xpath("//tbody/tr[1]/td[1]/button[1]/span[1]/span[1]")
By secondExpandButton = By.xpath("//tbody/tr[3]/td[1]/button[1]/span[1]/span[1]")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(firstExpandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Expand button
try {
	driver.findElement(firstExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the first Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the first Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the first Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Go back
try {
	driver.navigate().back();
	wait.until(ExpectedConditions.presenceOfElementLocated(secondExpandButton))
	log.info("[Action] [Passed] Go back")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Go back | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Expand button
try {
	driver.findElement(secondExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the second Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the second Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the second Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [14]" id="661a0558-e693-4da6-9f65-689b41023f2d" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_14] [APS] Fail To Read Vehicle Details" id="5c5f149d-9c33-4b03-af68-e330755b3927">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/vehicles/{vin}" methodName="getVehicle" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest id="85344693-b999-4b83-8d16-4dad3d1e22ba" mediaType="application/json" name="[A_14] [APS] Fail To Read Vehicle Details">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://dev.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/vehicles/AMV20240229123309</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 404 Not Found&quot;" id="4cd48c37-2313-4d86-bbaa-fd2ba5560682">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="9ea4bce8-a03d-4b26-964b-7262d56a44d5">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;404&quot;" id="b2283d11-7611-483b-b6d6-8e04480a9fb0">
          <con:configuration>
            <path>$['status']</path>
            <content>404</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Not Found&quot;" id="4f93594e-bd10-4aff-96be-b3b88278fc55">
          <con:configuration>
            <path>$['error']</path>
            <content>"Not Found"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to &quot;Cannot find vehicle&quot;" id="6b1cea76-bdbf-404c-a448-e50f24844d08">
          <con:configuration>
            <path>$['message']</path>
            <content>"Cannot find vehicle"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="f440bc33-2727-4234-87c4-df4c139ac315">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="&quot;/aps_campaigns/vehicles/${[A_14] [APS] Fail To Read Vehicle Details#vin}&quot;" id="e798e675-eb5d-4dc4-af1e-b2f0cc7fee16">
          <con:configuration>
            <path>$['path']</path>
            <content>"/aps_campaigns/vehicles/${[A_14] [APS] Fail To Read Vehicle Details#vin}"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="b5086ddb-0558-47fd-bf41-f208adc8430a">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters>
          <con:entry key="vin" value="AMV00000000000000"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>vin</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [14] 2 Minutes" id="aa12efb6-caa2-4c3b-88fc-0f1981287929">
    <con:settings/>
    <con:config>
      <delay>120000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_14] [APS] Check That Proper Logs Have Been Generated In Kibana" id="b32dd7e7-4f6a-40df-9d7b-dd54595167be">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "180"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "f5iu619"
String expectedAction = "read"
String expectedApplicationName = "APS"
String expectedDescription = "Vehicles details retrieval"
String expectedEventId = "3,030,003"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "f5iu619"
String expectedResult = "failed"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [15]" id="d3b8028a-9e6b-494d-a889-b3e3fe80cf8f" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="groovy" name="[A_15] [BS] Read Vehicle Status Update Details" id="b155069d-f117-4a10-8013-c911d0469b51">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By vehicleUpdatesPanel = By.id("vehicle_update_main")
By statusIcon = By.xpath("//span[@class='badge badge-pill notified']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(vehicleUpdatesPanel)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Vehicle Update page
try {
	driver.get("https://demo.orunext.com/#/otaupdate/vehicle-updates/vehicles/detail/" + context.expand('${#TestCase#vin}') + "/" + context.expand('${#TestCase#updateId}'))
	wait.until(ExpectedConditions.presenceOfElementLocated(statusIcon))
	log.info("[Action] [Passed] Open the Vehicle Update page")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Vehicle Update page | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit()

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [15] 2 Minutes" id="4b8ea820-f183-4130-8909-ba02c60a5b75">
    <con:settings/>
    <con:config>
      <delay>120000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_15] [BS] Check That Proper Logs Have Been Generated In Kibana" id="33970080-0523-48b7-99b6-28531679180b">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "160"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "edrqa4b"
String expectedAction = "read"
String expectedApplicationName = "BasisService"
String expectedDescription = "Update status events retrieval"
String expectedEventId = "3,030,004"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "edrqa4b"
String expectedResult = "successful"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By expandButton = By.xpath("//button[@aria-label='Toggle row details']//span[@class='euiButtonContent euiButtonEmpty__content']")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	wait.until(ExpectedConditions.presenceOfElementLocated(expandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Expand button
try {
	driver.findElement(expandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Single Document  link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the Event Id Value
try {
	//declare string variables for the actual Event Id Value
	String actualEventId = driver.findElement(eventIdValue).getText()
	
	assert actualEventId == expectedEventId

	log.info("[Action] [Completed] Validate the Event Id Value")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate the Event Id Value | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [16]" id="36a304dd-1676-45e5-8bed-5484261e2545" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_16] [BS] [1] Fail To Read Vehicle Status Update Details" id="48bd8b61-ce44-4d74-bae3-4f9ca24314cc">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Update" resourcePath="/api/oru/update_management/updates/{updateId}/statuses/searches" methodName="searchVehicleStatusUpdatesByUpdateId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_16] [BS] [1] Fail To Read Vehicle Status Update Details" id="c785306d-1964-4d97-8aff-47329139594b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request>{
   "columns":[
      "vin",
      "updateId",
      "configurationHash",
      "serverTimestamp",
      "vehicleTimestamp",
      "event",
      "description",
      "severity"
   ],
   "columnConditions":[
      
   ],
   "sortDirection":"desc",
   "count":true,
   "start":0,
   "sortBy":"serverTimestamp"
}</con:request>
        <con:originalUri>https://demo.orunext.com/api/oru/update_management/updates/2a35c928-8119-4934-86ff-86caa6053d38/statuses/searches</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="5b47c830-7cb7-4940-85d1-cf04ee53cceb">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="75b08db0-6ab6-4b62-add5-fe64df9eddbe">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="cde7ecbc-0894-48b4-b4c9-11107e95e6cb">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="7b449d92-3d56-4fef-ad55-e2be096337c6">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to &quot;Failed to convert value of type 'java.lang.String' to required type 'java.util.UUID'; Invalid UUID string: 0&quot;" id="2c83362e-e5f9-4807-8d0f-72393bae011d">
          <con:configuration>
            <path>$['message']</path>
            <content>"Failed to convert value of type 'java.lang.String' to required type 'java.util.UUID'; Invalid UUID string: 0"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="8bb9f0b4-e4a6-4600-a777-6ec5169a6462">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/update_management/updates/${[A_16] [BS] [1] Fail To Read Vehicle Status Update Details#updateId}/statuses/searches&quot;" id="b81a5c41-842d-434c-aefa-e312625f7aff">
          <con:configuration>
            <path>$['path']</path>
            <content>"/update_management/updates/${[A_16] [BS] [1] Fail To Read Vehicle Status Update Details#updateId}/statuses/searches"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="4399614f-ef12-4c19-8b79-2521ba995732">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="updateId" value="0"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>updateId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[A_16] [BS] [2] Fail To Read Vehicle Status Update Details" id="64ba735e-bb83-4e8a-a655-4243d775d5fe">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Update" resourcePath="/api/oru/update_management/updates/{updateId}/statuses/searches" methodName="searchVehicleStatusUpdatesByUpdateId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[A_16] [BS] [2] Fail To Read Vehicle Status Update Details" id="c785306d-1964-4d97-8aff-47329139594b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/update_management/updates/2a35c928-8119-4934-86ff-86caa6053d38/statuses/searches</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 400 Bad Request&quot;" id="b7bb43dc-10f8-451b-950e-c445f59bcdd5">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 400 Bad Request</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" name="Content-Type is equal to &quot;application/json&quot;" id="29f85fa6-8d0c-44f5-9528-119faf2d3a86">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 29 Feb 2024 11:58:23 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 404 Not Found</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 29 Feb 2024 11:58:23 GMT","expires":"0","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-xss-protection":"0","x-frame-options":"DENY","content-type":"application/json","#status#":"HTTP/1.1 404 Not Found","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[status] is equal to &quot;400&quot;" id="63b36175-3169-462c-8631-c7f7314f8333">
          <con:configuration>
            <path>$['status']</path>
            <content>400</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[error] is equal to &quot;Bad Request&quot;" id="85027e7a-93e9-4f20-b8eb-fb21de8c7051">
          <con:configuration>
            <path>$['error']</path>
            <content>"Bad Request"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[message] is equal to&quot;Invalid format&quot;" id="b463f2d0-c870-466a-9e2f-6129544b9549">
          <con:configuration>
            <path>$['message']</path>
            <content>"Invalid format"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Existence Match" name="[ref] exists" id="ab51b727-af03-46cd-9a0b-e0acd14e718a">
          <con:configuration>
            <path>$['ref']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" name="[path] is equal to &quot;/update_management/updates/${[A_16] [BS] [2] Fail To Read Vehicle Status Update Details#updateId}/statuses/searches&quot;" id="2e495d0a-da78-4199-93ba-a6d283bc52ab">
          <con:configuration>
            <path>$['path']</path>
            <content>"/update_management/updates/${[A_16] [BS] [2] Fail To Read Vehicle Status Update Details#updateId}/statuses/searches"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="[timestamp] contains the current date" id="183091e8-f5d5-4ad9-b215-e68cea7a71ca">
          <con:configuration>
            <scriptText>import java.text.SimpleDateFormat
import groovy.json.JsonSlurper

//get the JSON response body of the API response for the current test step
def jsonResponse = new JsonSlurper().parseText(messageExchange.response.responseContent)

//declare variables for the value of the [timestamp] key
String timestamp = jsonResponse.timestamp
//declare variables for the current date
String currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString()

//assert that [timestamp] contains the current date
assert timestamp.contains(currentDate)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="updateId" value="0a00a000-0000-0000-00aa-00aaa0000a00"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>updateId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="[Delay] [16] 30 Seconds" id="752f38e0-b751-45ca-beae-b3b2299163a8">
    <con:settings/>
    <con:config>
      <delay>30000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[E_16] [BS] Check That Proper Logs Have Been Generated In Kibana For Both Actions" id="2df48639-a6ff-4d93-b307-1679b2ad35a8">
    <con:settings/>
    <con:config>
      <script>import java.io.File
import java.time.Duration
import java.text.SimpleDateFormat
import java.util.concurrent.TimeUnit
import java.awt.Robot
import java.awt.event.KeyEvent

import org.apache.commons.io.FileUtils

import org.openqa.selenium.firefox.ProfilesIni
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.firefox.FirefoxProfile
import org.openqa.selenium.firefox.FirefoxOptions
import org.openqa.selenium.WebDriver
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import org.openqa.selenium.WebElement
import org.openqa.selenium.By
import org.openqa.selenium.OutputType
import org.openqa.selenium.TakesScreenshot

import org.openqa.selenium.Dimension
import org.openqa.selenium.Point
import org.openqa.selenium.support.ui.FluentWait
import com.eviware.soapui.support.GroovyUtils
import java.awt.Toolkit

/* ---------- MAIN CODE ---------- */

//declare date-time property to be used to create all screenshots under a single directory
String dateTime = currentDateTime()

//declare prodile and set up browser options
ProfilesIni profile = new ProfilesIni()
FirefoxProfile myProfile = profile.getProfile("selenium")
FirefoxOptions options = new FirefoxOptions()
options.setProfile(myProfile)

//declare web driver
WebDriver driver = new FirefoxDriver(options)

//set the browser window size
driver.manage().window().setSize(new Dimension(1920, 1080))

//get the screen dimensions to center the window
Toolkit toolkit = Toolkit.getDefaultToolkit()
int screenWidth = toolkit.getScreenSize().width
int screenHeight = toolkit.getScreenSize().height

//calculate the top-left corner position for centering the window
int x = (screenWidth - 1920) / 2
int y = (screenHeight - 1080) / 2

//set the browser window position
driver.manage().window().setPosition(new Point(x, y))

//set the waitting times
driver.manage().timeouts().pageLoadTimeout(90, TimeUnit.SECONDS)
driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS)
def wait = new WebDriverWait(driver, Duration.ofSeconds(60)) 
def fluentWait = new FluentWait&lt;>(driver)
        .withTimeout(Duration.ofSeconds(90))
        .pollingEvery(Duration.ofMillis(500))
        .ignoring(NoSuchElementException.class)

//declare variable for filter time window
String timeValue = "90"

//declare string variables for the expected values
String expectedIndex = context.expand('${#TestCase#expectedIndex}') 
String expectedActingUser = "f5iu619"
String expectedAction = "read"
String expectedApplicationName = "BasisService"
String expectedDescription = "Update status events retrieval"
String expectedEventId = "3,030,003"
String expectedEventType = context.expand('${#TestCase#expectedEventType}') 
String expectedLoggedInUser = "f5iu619"
String expectedResult = "failed"

String url = context.expand('${#TestCase#url}')
			.replace("timeValue", timeValue)
			.replace("indexValue", expectedIndex)
			.replace("actingUserValue", expectedActingUser)
			.replace("actionValue", expectedAction)
			.replace("applicationNameValue", expectedApplicationName)
			.replace("descriptionValue", expectedDescription.replace(" ", "%20"))
			.replace("eventIdValue", expectedEventId.replace(",", ""))
			.replace("eventTypeValue", expectedEventType)
			.replace("loggedInUserValue", expectedLoggedInUser)
			.replace("resultValue", expectedResult)

//declare locators for the UI elements
By continueButton = By.id("kc-login")
By dropDown = By.xpath("//div[@class='ng-value-container']")
By option = By.xpath("//span[text()='public']")
By proceedButton = By.xpath("//button[normalize-space()='Proceed']")
By kibanaIcon = By.xpath("//i[@class='fas fa-chart-bar']")
By firstExpandButton = By.xpath("//tbody/tr[1]/td[1]/button[1]/span[1]/span[1]")
By secondExpandButton = By.xpath("//tbody/tr[3]/td[1]/button[1]/span[1]/span[1]")
By singleDocumentLink = By.xpath("//a[normalize-space()='View single document']")
By tableTab = By.xpath("//span[normalize-space()='Table']")
By eventIdField = By.xpath("//span[contains(text(),'siemMessage.eventId')]")
By logTypeField = By.xpath("//span[contains(text(),'siemMessage.logType')]")
By applicationNameField = By.xpath("//span[contains(text(),'siemMessage.applicationName')]")
By applicationIdField = By.xpath("//span[contains(text(),'siemMessage.applicationId')]")
By eventTypeField = By.xpath("//span[contains(text(),'siemMessage.eventType')]")
By eventTimeField = By.xpath("//span[contains(text(),'siemMessage.eventTime')]")
By severityField = By.xpath("//span[contains(text(),'siemMessage.severity')]")
By loggedInUserField = By.xpath("//span[contains(text(),'siemMessage.loggedInUser')]")
By actingUserField = By.xpath("//span[contains(text(),'siemMessage.actingUser')]")
By isAdminField = By.xpath("//span[contains(text(),'siemMessage.isAdmin')]")
By isTechnicalUserField = By.xpath("//span[contains(text(),'siemMessage.isTechnicalUser')]")
By actionField = By.xpath("//span[contains(text(),'siemMessage.action')]")
By objectTypeField = By.xpath("//span[contains(text(),'siemMessage.objectType')]")
By objectNameField = By.xpath("//span[contains(text(),'siemMessage.objectName')]")
By objectConfidentialStatusField = By.xpath("//span[contains(text(),'siemMessage.objectConfidentialStatus')]")
By resultField = By.xpath("//span[contains(text(),'siemMessage.result')]")
By descriptionField = By.xpath("//span[contains(text(),'siemMessage.description')]")
By eventIdValue = By.xpath("//div[@data-test-subj='tableDocViewRow-siemMessage.eventId-value']")

//Action - Open the OruNext web application
try {
	driver.get("https://demo.orunext.com/")
	//this first ESC press does not take place. The second one does. I don't know why for now.
	//pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(continueButton))
	log.info("[Action] [Passed] Open the OruNext web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the OruNext web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the Continue button
try {
	driver.findElement(continueButton).click()
	//pressEsc()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(dropDown)))
	log.info("[Action] [Passed] Click the Continue button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the Continue button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Choose tenant from dropdown
try {
	driver.findElement(dropDown).click()
	driver.findElement(option).click()
	driver.findElement(proceedButton).click()
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(kibanaIcon)))
	log.info("[Action] [Passed] Action - Choose tenant from dropdown")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Action - Choose tenant from dropdown | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Open the Kibana web application
try {
	driver.get(url)
	pressEsc()
	wait.until(ExpectedConditions.presenceOfElementLocated(firstExpandButton))
	log.info("[Action] [Passed] Open the Kibana web application")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Open the Kibana web application | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Expand button
try {
	driver.findElement(firstExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the first Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the first Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the first Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the first Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the first Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Go back
try {
	driver.navigate().back();
	wait.until(ExpectedConditions.presenceOfElementLocated(secondExpandButton))
	log.info("[Action] [Passed] Go back")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Go back | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Expand button
try {
	driver.findElement(secondExpandButton).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(singleDocumentLink))
	log.info("[Action] [Passed] Click the second Expand button")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Expand button | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Click the second Single Document link
try {
	driver.findElement(singleDocumentLink).click()
	wait.until(ExpectedConditions.presenceOfElementLocated(tableTab))
	log.info("[Action] [Passed] Click the second Single Document link")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Click the second Single Document link | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Validate the appearance of the second Single Document fields
try {
	assert driver.findElement(eventIdField).isDisplayed() == true
	assert driver.findElement(logTypeField).isDisplayed() == true
	assert driver.findElement(applicationNameField).isDisplayed() == true
	assert driver.findElement(applicationIdField).isDisplayed() == true
	assert driver.findElement(eventTypeField).isDisplayed() == true
	assert driver.findElement(eventTimeField).isDisplayed() == true
	assert driver.findElement(severityField).isDisplayed() == true
	assert driver.findElement(loggedInUserField).isDisplayed() == true
	assert driver.findElement(actingUserField).isDisplayed() == true
	assert driver.findElement(isAdminField).isDisplayed() == true
	assert driver.findElement(isTechnicalUserField).isDisplayed() == true
	assert driver.findElement(actionField).isDisplayed() == true
	assert driver.findElement(objectTypeField).isDisplayed() == true
	assert driver.findElement(objectNameField).isDisplayed() == true
	assert driver.findElement(objectConfidentialStatusField).isDisplayed() == true
	assert driver.findElement(resultField).isDisplayed() == true
	assert driver.findElement(descriptionField).isDisplayed() == true

	log.info("[Action] [Completed] Validate appearance of Single Document Fields")
	takeScreenshot(driver, dateTime)
}
catch (Exception e) {
	log.info("[Action] [Failed] Validate appearance of Single Document Fields | " + e.toString())
	takeScreenshotAndCloseBrowser(driver, dateTime)
	throw e
}

//Action - Close the browser
log.info("[Action] Close the browser")
driver.quit();

/* ---------- CUSTOM METHODS ---------- */

//method to press ESC
public void pressEsc() {
	Robot robot = new Robot()
	robot.delay(2500)
	robot.keyPress(KeyEvent.VK_ESCAPE)
	robot.keyRelease(KeyEvent.VK_ESCAPE)
}

//method to return current date-time
public String currentDateTime() {
	return new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date()).toString()
}

//method to format a string to match the ReadyAPI directory naming convention
public String formattedString(String string) {
	return string
	.replaceAll(" ", "-").replaceAll("%", "%25").replaceAll("\\{", "%7B").replaceAll("\\}", "%7D").replaceAll("\\[", "%5B")
	.replaceAll("\\]", "%5D").replaceAll("\\(", "%28").replaceAll("\\)", "%29").replaceAll("/", "%2F").replaceAll("\\\\", "%5C")
	.replaceAll("\\+", "%2B").replaceAll("\\*", "%2A").replaceAll("\\^", "%5E").replaceAll("~", "%7E").replaceAll("=", "%3D")
	.replaceAll(">", "%3E").replaceAll("&lt;", "%3C").replaceAll("!", "%21").replaceAll("\\?", "%3F").replaceAll("@", "%40")
	.replaceAll("#", "%23").replaceAll("\\\$", "%24").replaceAll("&amp;", "%26").replaceAll("\\|", "%7C").replaceAll(";", "%3B")
	.replaceAll(":", "%3A").replaceAll("'", "%27").replaceAll("\"", "%22").replaceAll("`", "%60").replaceAll(",", "%2C")
}

//method to take a screenshot
public void takeScreenshot(WebDriver  webDriver,  String dateTime) throws Exception {
	Thread.sleep(1000) 
	TakesScreenshot screenshot  = ((TakesScreenshot) webDriver)
	File screenshotFile = screenshot.getScreenshotAs(OutputType.FILE)
	String path = new GroovyUtils(context).getProjectPath() +
						"\\Screenshots\\" +  
						context.expand('${#TestSuite#testSet}')  + "\\" +
						context.expand('${#TestCase#test}')  + "\\" + 
						formattedString(testRunner.testCase.getTestStepAt(context.getCurrentStepIndex()).name) +
						"\\Screenshots_" + dateTime + "\\Screenshot_" + currentDateTime() + ".png"
	File destinationFile = new File(path)
	FileUtils.copyFile(screenshotFile, destinationFile)
}

//method to take a screenshot and close the browser
public void takeScreenshotAndCloseBrowser(WebDriver  webDriver,  String dateTime) {
	takeScreenshot(webDriver, dateTime)
	log.info("Closing the browser in response to failure")
	webDriver.quit()
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="manualTestStep" name="Pause [17]" id="3e0d8004-d60c-4998-92d6-47604b1f9f64" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="restrequest" name="[Update] Set JIRA Test Case Execution Status" id="f975d6b9-e271-464e-8c19-b8551d105539" disabled="true">
    <con:settings/>
    <con:config service="TestExecution Automation" resourcePath="/jira/rest/raven/1.0/testexec/{testExecutionId}/execute/{testCaseId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Update] Set JIRA Test Case Execution Status" id="e20818b5-afc8-42d6-94a1-0f0247f1cf13" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="cookie" value="${#Global#jiraCookie}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:endpoint>https://devstack.vwgroup.com</con:endpoint>
        <con:request>0</con:request>
        <con:originalUri>https://devstack.vwgroup.com/jira/rest/raven/1.0/testexec/OTA-12453/execute/OTA-3433</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="c9eb5b90-b1b5-46e2-9b18-08ebe3facf22" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="86753b32-5402-4a25-9d6a-8d7e8f37f326" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper

// Following code will grab the Json response 
def response=messageExchange.response.responseContent
def jsonSul=new JsonSlurper().parseText(response)

log.info jsonSul.obj.test.id

context.testCase.setPropertyValue("testIssueId", jsonSul.obj.test.id.toString())</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="testExecutionId" value="${#Global#testExecutionId}"/>
          <con:entry key="testCaseId" value="${#TestCase#test}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="[Tear-Down] [Data-Source] Flash File Names" id="88033333-4d50-4e54-a33d-6c51494e1ba3">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="File">
        <con:configuration>
          <fileName>${#TestCase#flashFileNamesFilePath}</fileName>
          <separator>,</separator>
          <trim>false</trim>
          <charset>Cp1252</charset>
          <quotedValues>false</quotedValues>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>flashFileName</con:property>
      <con:restartOnRun>true</con:restartOnRun>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete Flash File" id="94af370d-9479-4cde-ba07-9017e87d56c0">
    <con:settings/>
    <con:config service="VW Group Services Mock" resourcePath="/version42/flashdata/{name}" methodName="delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Delete Flash File" id="7ecc4bfb-3628-4dcf-a577-6508bcdfccf4" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com/api/vw-group-services-mock</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/version42/flashdata/W0L0AHL5555555555_bin_test_1.bin</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="fe0be70e-87d2-4790-850f-6a2de1656ec4" name="Status Line is equal to &quot;HTTP/1.1 204 No Content&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Wed, 08 Nov 2023 20:10:17 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 204 No Content</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Wed, 08 Nov 2023 20:10:17 GMT","content-length":"0","expires":"0","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="name" value="${[Tear-Down] [Data-Source] Flash File Names#flashFileName}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="[Tear-Down] [Data-Source-Loop] Flash File Names" id="159aebb2-7b5b-4863-8cf6-71c1f5715110">
    <con:settings/>
    <con:config>
      <dataSourceStep>[Tear-Down] [Data-Source] Flash File Names</dataSourceStep>
      <targetStep>[Tear-Down] Delete Flash File</targetStep>
      <discardResults>false</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Forefully Delete Campaign" id="93f7789e-f39b-4c8a-9938-9f3cad0705bb">
    <con:settings/>
    <con:config service="APS Campaign Service" resourcePath="/api/oru/aps_campaigns/campaigns/{actionCode}/{criterion}/{changeMeasureCode}/force" methodName="forceDeleteCampaign_1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Forefully Delete Campaign" id="a886f4b0-7e57-438e-82f8-e5eb47390512" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/aps_campaigns/campaigns/AR43/43/ACM20231123161643/force</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="f4666772-ff4b-4840-a5c5-f18f39839497" name="Status Line is equal to &quot;HTTP/1.1 204 No Content&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>f65a9910cd4fd831</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 23 Nov 2023 14:20:24 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1; mode=block</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 204 No Content</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"f65a9910cd4fd831","date":"Thu, 23 Nov 2023 14:20:24 GMT","content-length":"0","expires":"0","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","x-frame-options":"DENY","#status#":"HTTP/1.1 204 No Content","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="changeMeasureCode" value="${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}"/>
          <con:entry key="criterion" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_criteria'][0]['criterion']}"/>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete Campaign Set" id="cae29e32-59f7-41ba-b7cc-324df9225d7c">
    <con:settings/>
    <con:config service="APS Campaign Service" resourcePath="/api/oru/aps_campaigns/campaign_sets/{actionCode}" methodName="deleteCampaignSet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Delete Campaign Set" id="c47954ef-4e6e-4331-8b5d-741b72f14b8e" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/aps_campaigns/campaign_sets/T555</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="56cff306-c9c1-4f34-beb3-4f28c84d4a5d" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>d341a9fe9ae8e401</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 10:01:21 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"d341a9fe9ae8e401","date":"Tue, 07 Nov 2023 10:01:21 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="998d2ec4-0f4a-4cc8-93fc-2334a6ce7029" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>d341a9fe9ae8e401</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Tue, 07 Nov 2023 10:01:21 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"d341a9fe9ae8e401","date":"Tue, 07 Nov 2023 10:01:21 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6e08a370-193d-43bd-b371-ea6698000107" name="[code] is equal to &quot;200&quot;">
          <con:configuration>
            <path>$['code']</path>
            <content>200</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="740f34ec-7a9e-47db-bb50-99f312a09b1b" name="[name] is equal to &quot;Campaign&quot;">
          <con:configuration>
            <path>$['name']</path>
            <content>"Campaign"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="58d815c9-6603-4b95-a2f2-1d4122aad41d" name="[message] is equal to &quot;Successfully deleted&quot;">
          <con:configuration>
            <path>$['message']</path>
            <content>"Successfully deleted"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete ReCall Action" id="817284e5-b3c1-4b27-a013-1828db1e8ddf">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/recall/actions/{actionCode}" methodName="removeReCallAction" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest id="dfd04783-0fdf-4fe8-be47-c70d303a3512" mediaType="application/json" name="[Tear-Down] Delete ReCall Action" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://dev.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/recall/actions/AR01</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="7799e2e9-e56f-4c8c-8072-36e2c62c7c2f" name="Status Line is equal to &quot;HTTP/1.1 204 No Content&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>b5fb56cdc14ce488</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Fri, 17 Nov 2023 10:02:35 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1; mode=block</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 204 No Content</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"b5fb56cdc14ce488","date":"Fri, 17 Nov 2023 10:02:35 GMT","content-length":"0","expires":"0","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","x-frame-options":"DENY","#status#":"HTTP/1.1 204 No Content","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters>
          <con:entry key="actionCode" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>actionCode</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete Mock ReCall Action" id="8475dbeb-f0d7-49e4-bc02-7841e75fa9f1">
    <con:settings/>
    <con:config service="VW Group Services Mock" methodName="deleteCampaign" resourcePath="/campaigns/{campaignId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Delete Mock ReCall Action" id="8ebca2d9-a397-4c5d-b3bc-021346117181" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/campaigns/T555</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="cae69b98-9163-4ac4-9630-89b9183f2f45" name="Status Line is equal to &quot;HTTP/1.1 204 No Content&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Mon, 06 Nov 2023 15:39:13 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1; mode=block</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 204 No Content</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Mon, 06 Nov 2023 15:39:13 GMT","content-length":"0","expires":"0","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","x-frame-options":"DENY","#status#":"HTTP/1.1 204 No Content","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="campaignId" value="${[Pre-Condition] [OTA-2662] [3] ReCall action is created#RawRequest#$['campaign_id']}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete Vehicle Configuration" id="63d4b31c-15b6-4a77-bd4e-54a95eeb32b1">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Vehicle Configuration" resourcePath="/api/oru/vehicle_configurations/vehicles/{vin}" methodName="deleteVehicleConfigurationVehicle" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Delete Vehicle Configuration" id="22254bfd-6197-4cb8-bcd3-96a0e54ab299" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/vehicle_configurations/vehicles/AMV20231124094302</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="99f6df2a-ce23-4c02-bbc3-594631382b9f" name="Status Line is equal to &quot;HTTP/1.1 204 No Content&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>45b8f819e83029d5</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Fri, 24 Nov 2023 07:53:17 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1; mode=block</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 204 No Content</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"45b8f819e83029d5","date":"Fri, 24 Nov 2023 07:53:17 GMT","content-length":"0","expires":"0","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","x-frame-options":"DENY","#status#":"HTTP/1.1 204 No Content","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="vin" value="${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>vin</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete Vehicle" id="c768dc65-128e-4901-81d0-79e525719453">
    <con:settings/>
    <con:config service="APS Campaign Service" resourcePath="/api/oru/aps_campaigns/vehicles/{vin}" methodName="deleteVehicle" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Delete Vehicle" id="fb7a489d-1eea-4f8f-bc14-2dfbb7abe90d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/aps_campaigns/vehicles/AMV20240215094258</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="b71007fd-094e-443b-b92c-32f3f45b37b3" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 15 Feb 2024 07:51:59 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 15 Feb 2024 07:51:59 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="DataAndMetadataAssertion" id="290588c0-6db7-4969-afbf-5762159f1600" name="Content-Type is equal to &quot;application/json&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 15 Feb 2024 07:51:59 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['transfer-encoding']</con:path>
              <con:element>transfer-encoding</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>chunked</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>application/json</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 15 Feb 2024 07:51:59 GMT","expires":"0","transfer-encoding":"chunked","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","content-type":"application/json","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d4f564c3-ab33-4cd4-9ba5-016313473e08" name="[code] is euqal to &quot;200&quot;">
          <con:configuration>
            <path>$['code']</path>
            <content>200</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="868c8234-593b-4107-854f-fefa23756630" name="[name] is equal to &quot;Vehicle&quot;">
          <con:configuration>
            <path>$['name']</path>
            <content>"Vehicle"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9efb99fd-b4af-4c06-9c67-70d41d585813" name="[message] is equal to &quot;Successfully deleted&quot;">
          <con:configuration>
            <path>$['message']</path>
            <content>"Successfully deleted"</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="vin" value="${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete Mock Vehicle" id="b275e10f-9897-49b3-ac0c-1bda0e7af169">
    <con:settings/>
    <con:config service="VW Group Services Mock" methodName="deleteVehicle" resourcePath="/vehicles/{vin}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Delete Mock Vehicle" id="b5fe47b2-7e9e-43c8-8e0c-f7b64e506f07" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/vehicles/W0L0AHL5555555555</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="fd0a4d11-cfd2-4d88-847f-a079c916f43d" name="Status Line is equal to &quot;HTTP/1.1 200 OK&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Mon, 06 Nov 2023 14:17:54 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-security-policy']</con:path>
              <con:element>content-security-policy</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Mon, 06 Nov 2023 14:17:54 GMT","content-length":"0","expires":"0","content-security-policy":"default-src 'self' 'unsafe-eval' 'unsafe-inline' *.orunext.com *.esrlabs.com *.vwgroup.com *.blob.core.windows.net *.blob.core.chinacloudapi.cn *.microsoftonline.com blob: data:; upgrade-insecure-requests;","#status#":"HTTP/1.1 200 OK","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="vin" value="${[Pre-Condition] [OTA-2661] [2] Vehicle is created#RawRequest#$['vin']}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete Change Measure" id="d7c1745e-2be9-4e8f-a94d-4d1be3062eeb">
    <con:settings/>
    <con:config service="ESR Labs ORU App - Campaign" resourcePath="/api/oru/aps_campaigns/service42/change_measures/{code}" methodName="removeService42ChangeMeasure" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Delete Change Measure" id="8234b2ec-3c3b-429e-b836-f773764a34b6" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>https://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/oru/aps_campaigns/service42/change_measures/ACM20231127101558</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" name="Status Line is equal to &quot;HTTP/1.1 204 No Content&quot;" id="af360dc0-ad98-4b5c-855e-f3bc18c5d457">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['x-request-id']</con:path>
              <con:element>x-request-id</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>a132b144d8d1271e</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Fri, 24 Nov 2023 16:03:56 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1; mode=block</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 204 No Content</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"x-request-id":"a132b144d8d1271e","date":"Fri, 24 Nov 2023 16:03:56 GMT","content-length":"0","expires":"0","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","x-frame-options":"DENY","#status#":"HTTP/1.1 204 No Content","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="code" value="${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>code</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="2c6d89f0-0ea5-4682-820f-ce822c87d07e">
            <con:authProfile>ORU-OAuth</con:authProfile>
          </con:entry>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="9ba48164-5af1-48d4-aa59-9d1e85e3e71a">
            <con:authProfile>ORU-live</con:authProfile>
          </con:entry>
          <con:entry environmentId="7b56b5f6-5164-4fbf-8821-ef5b0d3790b7">
            <con:authProfile>ORU-app</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="[Tear-Down] Delete Mock Change Measure" id="072442db-30f2-4e8d-9884-de5643ac0a4a">
    <con:settings/>
    <con:config service="VW Group Services Mock" methodName="deleteChangeMeasure" resourcePath="/change_measures/{code}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="[Tear-Down] Delete Mock Change Measure" id="a0e92a6b-d8bb-4e32-8cce-5c4960d626a4" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Authorization" value="Bearer ${#TestCase#accessToken}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://demo.orunext.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://demo.orunext.com/api/vw-group-services-mock/change_measures/OTA6666</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="2835aebd-13b0-4bd7-8a7f-0cdda86fed1a" name="Status Line is equal to HTTP/1.1 204 No Content&quot;">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Mon, 06 Nov 2023 12:44:14 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['expires']</con:path>
              <con:element>expires</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1; mode=block</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 204 No Content</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache, no-store, max-age=0, must-revalidate</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['strict-transport-security']</con:path>
              <con:element>strict-transport-security</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>max-age=31536000 ; includeSubDomains</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Mon, 06 Nov 2023 12:44:14 GMT","content-length":"0","expires":"0","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","x-frame-options":"DENY","#status#":"HTTP/1.1 204 No Content","cache-control":"no-cache, no-store, max-age=0, must-revalidate","strict-transport-security":"max-age=31536000 ; includeSubDomains","pragma":"no-cache"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="code" value="${[Pre-Condition] [OTA-2660] [2] Change Measure is created#RawRequest#$['code']}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="4f515789-2a71-4da6-9bbc-0aff4cd795fa">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Tear-Down] Delete Data Source Files Directory" id="f380727b-f193-4158-b86d-8acbc4d2fbf9">
    <con:settings/>
    <con:config>
      <script>/* ---------- MAIN CODE ---------- */

//declare variable for the path to the Data Source file
String dataSourceFilesPath =  context.expand('${#TestCase#dataSourceFilesPath}')

//delete the directory and all its files
deleteDirectory(dataSourceFilesPath)

/* ---------- CUSTOM METHODS ---------- */

//methods that deletes a directory
public void deleteDirectory(String path) {
	File directory = new File(path)
	File[] files = directory.listFiles()
	if (files != null) {
		for (File file : files) {
			file.delete()
	   }
	}
	directory.delete();
	log.info("Directory was deleted &lt;&lt;" +  path + ">>")
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Tear-Down] Delete Flash Files Directory" id="f68b39d5-c619-4233-b0b2-90c730904bd8">
    <con:settings/>
    <con:config>
      <script>/* ---------- MAIN CODE ---------- */

//declare variable for the path to the Flash Files
String flashFilesPath =  context.expand('${#TestCase#flashFilesPath}')

//delete the directory and all its files
deleteDirectory(flashFilesPath)

/* ---------- CUSTOM METHODS ---------- */

//methods that deletes a directory
public void deleteDirectory(String path) {
	File directory = new File(path)
	File[] files = directory.listFiles()
	if (files != null) {
		for (File file : files) {
			file.delete()
	   }
	}
	directory.delete();
	log.info("Directory was deleted &lt;&lt;" +  path + ">>")
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Tear-Down] Delete Vehicle Files Directory" id="759b1c6e-1e5b-4306-ba61-447658dca397">
    <con:settings/>
    <con:config>
      <script>/* ---------- MAIN CODE ---------- */

//declare variable for the path to the vehicle files
String vehicleFilesPath =  context.expand('${#TestCase#vehicleFilesPath}')

//delete the directory and all its files
deleteDirectory(vehicleFilesPath)

/* ---------- CUSTOM METHODS ---------- */

//methods that deletes a directory
public void deleteDirectory(String path) {
	File directory = new File(path)
	File[] files = directory.listFiles()
	if (files != null) {
		for (File file : files) {
			file.delete()
	   }
	}
	directory.delete();
	log.info("Directory was deleted &lt;&lt;" +  path + ">>")
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Tear-Down] Delete Upload Data Files Directory" id="20d65d70-6b86-4176-a219-c1a91223726c">
    <con:settings/>
    <con:config>
      <script>/* ---------- MAIN CODE ---------- */

//declare variable for the path to the Upload Data Files
String uploadDataFilesPath =  context.expand('${#TestCase#uploadDataFilesPath}')

//delete the directory and all its files
deleteDirectory(uploadDataFilesPath)

/* ---------- CUSTOM METHODS ---------- */

//methods that deletes a directory
public void deleteDirectory(String path) {
	File directory = new File(path)
	File[] files = directory.listFiles()
	if (files != null) {
		for (File file : files) {
			file.delete()
	   }
	}
	directory.delete();
	log.info("Directory was deleted &lt;&lt;" +  path + ">>")
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Tear-Down] Delete Downloaded Vehicle Configuration Files" id="1e220114-e74d-49d8-927d-052d8833bb46">
    <con:settings/>
    <con:config>
      <script>/* ---------- MAIN CODE ---------- */

//declare variable for the path to the downloaded  files
String vin = context.expand('${#TestCase#vin}') 
String downloadsDirectory = System.getProperty("user.home") + "\\Downloads"

//delete the downloaded files
deleteFiles(downloadsDirectory, vin)

/* ---------- CUSTOM METHODS ---------- */

//methods that deletes the downloaded files
public void deleteFiles(String path, String vin) {
	File directory = new File(path)
	File[] files = directory.listFiles()
	if (files != null) {
		for (File file : files) {
			if (file.getName().contains("VehicleConfigurations_" + vin)){
				file.delete()
			}
	   }
	}
	directory.delete();
	log.info("Downloaded files were deleted")
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="[Tear-Down] Delete Downloaded Search Results Files" id="586c3917-282d-4a01-a599-988846e0d2dc">
    <con:settings/>
    <con:config>
      <script>/* ---------- MAIN CODE ---------- */

//declare variable for the path to the downloaded  files
String vin = context.expand('${#TestCase#vin}') 
String downloadsDirectory = System.getProperty("user.home") + "\\Downloads"

//delete the downloaded files
deleteFiles(downloadsDirectory, vin)

/* ---------- CUSTOM METHODS ---------- */

//methods that deletes the downloaded files
public void deleteFiles(String path, String vin) {
	File directory = new File(path)
	File[] files = directory.listFiles()
	if (files != null) {
		for (File file : files) {
			if (file.getName().contains("CARB_data" + vin)){
				file.delete()
			}
	   }
	}
	directory.delete();
	log.info("Downloaded files were deleted")
}</script>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>test</con:name>
      <con:value>OTA-19176</con:value>
    </con:property>
    <con:property>
      <con:name>vehicleConfigurationFileName</con:name>
      <con:value>VehicleConfiguration.json</con:value>
    </con:property>
    <con:property>
      <con:name>vehicleConfigurationFileContent</con:name>
      <con:value>{     "schema": "DiagAssemblyStatus_DetailLevel_Update_Schema_V1.3.2.json",     "description": "",     "assemblyStatus": {         "vehicleInformation": {             "VIN": ""         },         "assemblyInformation": [             {                 "ecuInformation": {                     "dataObjects": {                         "partNumber": "85F907468  ",                         "zdcVersion": "",                         "fazitIdString": [                             "BPA-08528.01.2115281234"                         ],                         "zdcPartNumber": "",                         "asamFileVersion": "004030",                         "hardwareVersion": "X09",                         "softwareVersion": "G111",                         "asamFileIdentifier": "EV_HCP5GatewAU416",                         "hardwarePartNumber": "85F907468  "                     },                     "logicalLink": "",                     "diagnosisAddress": "0019"                 }             },             {                 "ecuInformation": {                     "dataObjects": {                         "partNumber": "TESTMOD31",                         "zdcVersion": "----",                         "fazitIdString": [                             "000-00000.00.0000000000"                         ],                         "zdcPartNumber": "-----------",                         "asamFileVersion": "004030",                         "softwareVersion": "G111",                         "asamFileIdentifier": "EV_HCP5MODAU416",                         "hardwarePartNumber": "TESTMOD31"                     },                     "logicalLink": "",                     "diagnosisAddress": "8124"                 }             },             {                 "ecuInformation": {                     "dataObjects": {                         "partNumber": "85E907808  ",                         "zdcVersion": "8109",                         "fazitIdString": [                             "BPG-81020.01.2114800043"                         ],                         "zdcPartNumber": "F5S909133A ",                         "asamFileVersion": "002008",                         "hardwareVersion": "H08",                         "softwareVersion": "X061",                         "asamFileIdentifier": "EV_ELVISAU41X",                         "hardwarePartNumber": "85E907808  "                     },                     "logicalLink": "",                     "diagnosisAddress": "8133"                 }             }         ]     },     "releaseVersion": "1.0.0",     "assemblyStatusMetaData": {         "vcHash": "",         "newestEntryTimestamp": "",         "oldestEntryTimestamp": "2022-06-10T10:38:47.833Z"     } }</con:value>
    </con:property>
    <con:property>
      <con:name>vehicleManifestFileName</con:name>
      <con:value>VehicleManifest.json</con:value>
    </con:property>
    <con:property>
      <con:name>vehicleManifestFileContent</con:name>
      <con:value>{     "modulVersion": "2.1.0",     "modulResult": true,     "scheme": "VehicleManifestSchema_2.2.0.json",     "manifestImplementationVersion": "",     "manifestName": "",     "manifestFileVersion": "",     "requestId": "12345678-1234-1234-1234-12345678abce",     "description": "Ausgabebeispiel VMG Schema 2.0 2021-01-25",     "blPartNumber": "0123456789",     "vcHash": "",     "useCase": "oru",     "checkMap": "checked",     "amCode": "",     "updateMap": {         "id": 1,         "updateType": "sequential",         "updateItems": [             {                 "id": 2,                 "elementType": "updateItem",                 "updateItem": {                     "diagnosisAddress": "0019",                     "dataType": "PROG",                     "progInformation": {                         "sgvType": "PU_",                         "law": "BC#",                         "ecuType": "UDS (ohne ICAS)",                         "obdRelevance": false,                         "ivdRelevance": false,                         "diagnosisClass": "DK4",                         "duration": 17,                         "targetVersions": [                             {                                 "partNumber": "85F907468",                                 "softwareVersion": "H4E1",                                 "hardwarePartNumber": "85F907468A",                                 "hardwareVersion": "X10"                             }                         ],                         "validVersionMapping": [                             {                                 "odxSessionShortName": "fileForVerify",                                 "flashSetupTime": 0,                                 "metaFile": "",                                 "hardwareVersion": "X10",                                 "hardwarePartNumber": "85F907468A",                                 "softwareVersion": "H4E1",                                 "partNumber": "85F907468",                                 "dataFiles": [                                     {                                         "blockFileName": "",                                         "blockNo": "000A",                                         "blockVersion": "0236",                                         "blockInstallationTime": 60,                                         "blockFileSize": 115                                     },                                     {                                         "blockFileName": "",                                         "blockNo": "000B",                                         "blockVersion": "0236",                                         "blockInstallationTime": 60,                                         "blockFileSize": 115                                     }                                 ]                             }                         ]                     },                     "retries": 1,                     "preActions": [                         {                             "actionType": "crc",                             "id": 3,                             "crcAction": {                                 "fusiTransferDA": true                             }                         }                     ],                     "postActions": [                         {                             "actionType": "crc",                             "id": 4,                             "retries": 1,                             "crcAction": {                                 "manifest": ""                             }                         },                         {                             "actionType": "crc",                             "id": 5,                             "retries": 1,                             "crcAction": {                                 "manifest": ""                             }                         }                     ]                 }             },             {                 "id": 6,                 "elementType": "updateBlock",                 "updateBlock": {                     "updateType": "sequential",                     "updateItems": [                         {                             "id": 7,                             "elementType": "updateItem",                             "updateItem": {                                 "diagnosisAddress": "0075",                                 "dataType": "CONF",                                 "confInformation": {                                     "validVersionMapping": [                                         {                                             "confManifest": "ConfManifest_0075.json"                                         }                                     ],                                     "obdRelevance": false,                                     "ivdRelevance": false,                                     "duration": 17                                 }                             }                         },                         {                             "id": 8,                             "elementType": "updateItem",                             "updateItem": {                                 "diagnosisAddress": "0076",                                 "dataType": "WAIT",                                 "waitInformation": {                                     "duration": 400                                 }                             }                         },                         {                             "id": 9,                             "elementType": "updateItem",                             "updateItem": {                                 "diagnosisAddress": "0013",                                 "dataType": "RES",                                 "resInformation": {                                     "resType": "SOFT"                                 }                             }                         }                     ]                 }             }         ]     } }</con:value>
    </con:property>
    <con:property>
      <con:name>configurationManifestFileName</con:name>
      <con:value>ConfManifest_0075.json</con:value>
    </con:property>
    <con:property>
      <con:name>configurationManifestFileContent</con:name>
      <con:value>{   "scheme": "ConfigurationManifest_v1_6_0.schema.json",   "modulVersion" : "0.5.2",   "requestId" : "1234",   "diagnosisAddress": "75",   "diagnosisAddressMaster" : "19",   "nodeAddress" : "75",   "diagnosisClass" : "4",   "zdcFileName": "Z16_95C_0000_8W0909612D__0012__001.xml",   "zdcPartNumber": "8W0909612D",   "zdcVersion": "0012",   "ivdConfCurrent": "4355a46b19d348dc2f57c046f8ef63d4538ebb936000f3c9ee954a27460dd865",   "ivdConfTarget": "53c234e5e8472b6ac51c1ae1cab3fe06fad053beb8ebfd8977b010655bfdd3c3",   "sfdTokenCfgData":"7f2181b77f4e715f290170420d444555565747505346282808157f4c5b060d2b06010401990a8d110a020003534a57574f2d57574f32362e30352e3133303030313531323000000172aa286ea000000172aa286ea00106006d0e345dad53bd5389f6553644c4f8f9bff07cba095babf413a0b0013eee6b7d5f3740ff80ebfa38e3cd7d905d5f687c401b154feca51eb12aa3350fd752d0ae3c5ededaf7fb88d8a1ae09335567093c006a2d62e3d77ecbd4aa343eff75951d6d4873",   "confRule":["AlwaysReadAll","true"],   "demandOrientedCoding" : false,   "serviceList": [     {       "elementType":"SPECIALTY",       "command":["HexService","31011001040000"],       "expectedResponse":"710110"     },     {       "elementType" : "CFGData",       "sid" : "2E",       "did" : "0600",       "value" : "01E0E0F8C04080F6E0",       "tableName" : "CodingValue"     },     {       "elementType" : "CFGData",       "sid" : "2E",       "did" : "0804",       "value" : "EA480695",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType" : "CFGData",       "value" : "00",       "did" : "0805",       "sid" : "2E",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "0806",       "value": "417564695F4D4D495F00000000000000000000000000000000000000000000005F3547487A0000000000",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "0B33",       "value": "01",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "0B37",       "value": "01",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "0B43",       "value": "01",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "0B49",       "value": "4445",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "0C23",       "value": "01",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "0C27",       "value": "8E20",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "0C3B",       "value": "F8",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType": "CFGData",       "sid": "2E",       "did": "24F1",       "value": "C0",       "tableName": "PKZZ_TABROW_XYZ"     },     {       "elementType":"SPECIALTY",       "command":["HexService","1101"],       "expectedResponse":"51"     },     {       "elementType":"SPECIALTY",       "command":["WAIT","1000"]     }   ] }</con:value>
    </con:property>
    <con:property>
      <con:name>oucFlashFileContent</con:name>
      <con:value>{     "schema": "urn:schema:volkswagen.de/orunext_crc_diagmaster/1_0",     "containerIdent": {         "updateType": 1,         "diagnosticAddress": 129,         "diagnosticAddressInverted": 65406,         "sparePartNumber": "",         "softwareVersion": "",         "containerVersion": "TEST"     },     "expectedHashvalues": {         "expHashvaluesLengthBytesLengthBytes": 32,         "expectedIvdHashvalueRegular": "74105EADA46628175C9B32BF6E647F00BF45590BE4ECEC9F98639739B78CCACF",         "expectedIvdHashvalueInverted": "8BEFA1525B99D7E8A364CD40919B80FF40BAA6F41B131360679C68C648733530"     },     "securedChecksums": {         "diagAddrIvdHashCRC32Regular": "543B87B7",         "diagAddrIvdHashCRC32Inverted": "4845B75A"     },     "validationParameters": {         "procedure": "0x0253-Calculate_integrity_validation_data",         "Calculate_integrity_validation_data": {             "typeOfCalculation": 1,             "typeOfHashValue": 1         }     } }</con:value>
    </con:property>
    <con:property>
      <con:name>uploadDataFileName</con:name>
      <con:value>uploadData.json</con:value>
    </con:property>
    <con:property>
      <con:name>uploadDataFileContent</con:name>
      <con:value>{     "name": "",     "docTypeName": "SW-ODX",     "odxContainerFormat": "V4.0",     "flash20": false }</con:value>
    </con:property>
    <con:property>
      <con:name>raNumberOfRetries</con:name>
      <con:value>10</con:value>
    </con:property>
    <con:property>
      <con:name>raSecondsBetweenRetries</con:name>
      <con:value>3</con:value>
    </con:property>
    <con:property>
      <con:name>vsNumberOfRetries</con:name>
      <con:value>36</con:value>
    </con:property>
    <con:property>
      <con:name>vsSecondsBetweenRetries</con:name>
      <con:value>5</con:value>
    </con:property>
    <con:property>
      <con:name>url</con:name>
      <con:value>https://kibana.demo.orunext.com/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-timeValues,to:now))&amp;_a=(columns:!(),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:_index,negate:!f,params:(query:indexValue),type:phrase),query:(match_phrase:(_index:indexValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.eventId,negate:!f,params:(query:eventIdValue),type:phrase),query:(match_phrase:(siemMessage.eventId:eventIdValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.action,negate:!f,params:(query:actionValue),type:phrase),query:(match_phrase:(siemMessage.action:actionValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.eventType,negate:!f,params:(query:eventTypeValue),type:phrase),query:(match_phrase:(siemMessage.eventType:eventTypeValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.applicationName,negate:!f,params:(query:applicationNameValue),type:phrase),query:(match_phrase:(siemMessage.applicationName:applicationNameValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.description,negate:!f,params:(query:'descriptionValue'),type:phrase),query:(match_phrase:(siemMessage.description:'descriptionValue'))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.actingUser,negate:!f,params:(query:actingUserValue),type:phrase),query:(match_phrase:(siemMessage.actingUser:actingUserValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.loggedInUser,negate:!f,params:(query:loggedInUserValue),type:phrase),query:(match_phrase:(siemMessage.loggedInUser:loggedInUserValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.result,negate:!f,params:(query:resultValue),type:phrase),query:(match_phrase:(siemMessage.result:resultValue)))),index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,interval:auto,query:(language:kuery,query:''),sort:!(!(created,desc)))</con:value>
    </con:property>
    <con:property>
      <con:name>altUrl</con:name>
      <con:value>https://kibana.demo.orunext.com/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-timeValues,to:now))&amp;_a=(columns:!(),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:_index,negate:!f,params:(query:indexValue),type:phrase),query:(match_phrase:(_index:indexValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.eventId,negate:!f,params:(query:eventIdValue),type:phrase),query:(match_phrase:(siemMessage.eventId:eventIdValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.action,negate:!f,params:(query:actionValue),type:phrase),query:(match_phrase:(siemMessage.action:actionValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.eventType,negate:!f,params:(query:eventTypeValue),type:phrase),query:(match_phrase:(siemMessage.eventType:eventTypeValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.applicationName,negate:!f,params:(query:'applicationNameValue'),type:phrase),query:(match_phrase:(siemMessage.applicationName:'applicationNameValue'))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.description,negate:!f,params:(query:'descriptionValue'),type:phrase),query:(match_phrase:(siemMessage.description:'descriptionValue'))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.actingUser,negate:!f,params:(query:actingUserValue),type:phrase),query:(match_phrase:(siemMessage.actingUser:actingUserValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.loggedInUser,negate:!f,params:(query:loggedInUserValue),type:phrase),query:(match_phrase:(siemMessage.loggedInUser:loggedInUserValue))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,key:siemMessage.result,negate:!f,params:(query:resultValue),type:phrase),query:(match_phrase:(siemMessage.result:resultValue)))),index:fa26c690-5dd0-11ee-b461-45ce0065d8e0,interval:auto,query:(language:kuery,query:''),sort:!(!(created,desc)))</con:value>
    </con:property>
    <con:property>
      <con:name>expectedIndex</con:name>
      <con:value>siem-message</con:value>
    </con:property>
    <con:property>
      <con:name>expectedEventType</con:name>
      <con:value>ObjectAccess_SensitiveData</con:value>
    </con:property>
    <con:property>
      <con:name>code</con:name>
      <con:value>ACM20240626120547</con:value>
    </con:property>
    <con:property>
      <con:name>vin</con:name>
      <con:value>AMV20240626120548</con:value>
    </con:property>
    <con:property>
      <con:name>pkn</con:name>
      <con:value>7120548</con:value>
    </con:property>
    <con:property>
      <con:name>modelName</con:name>
      <con:value>Q4 e-tron</con:value>
    </con:property>
    <con:property>
      <con:name>vCreationDate</con:name>
      <con:value>2024-06-26T12:05:48.59Z</con:value>
    </con:property>
    <con:property>
      <con:name>campaignID</con:name>
      <con:value>AR48</con:value>
    </con:property>
    <con:property>
      <con:name>criterion</con:name>
      <con:value>48</con:value>
    </con:property>
    <con:property>
      <con:name>raCreationDate</con:name>
      <con:value>2024-06-26T12:05:48.200Z</con:value>
    </con:property>
    <con:property>
      <con:name>cEndDate</con:name>
      <con:value>2024-07-03T12:05:52.285Z</con:value>
    </con:property>
    <con:property>
      <con:name>dataSourceFilesPath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\data-source-files</con:value>
    </con:property>
    <con:property>
      <con:name>flashFileNamesFilePath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\data-source-files\flashFileNames.txt</con:value>
    </con:property>
    <con:property>
      <con:name>flashFilesPath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\flash-files</con:value>
    </con:property>
    <con:property>
      <con:name>binFileOne</con:name>
      <con:value>BIN_AFF_20240626120553560_1931.bin</con:value>
    </con:property>
    <con:property>
      <con:name>binFileTwo</con:name>
      <con:value>BIN_AFF_20240626120554561_5486.bin</con:value>
    </con:property>
    <con:property>
      <con:name>odxfFile</con:name>
      <con:value>ODX_F_AFF_20240626120555562_8748.odx-f</con:value>
    </con:property>
    <con:property>
      <con:name>oucFileOne</con:name>
      <con:value>OUC_AFF_20240626120556564_2301.ouc</con:value>
    </con:property>
    <con:property>
      <con:name>oucFileTwo</con:name>
      <con:value>OUC_AFF_20240626120557565_5002.ouc</con:value>
    </con:property>
    <con:property>
      <con:name>uploadDataFilesPath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\upload-data-files</con:value>
    </con:property>
    <con:property>
      <con:name>uploadDataFilePath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\upload-data-files\uploadData.json</con:value>
    </con:property>
    <con:property>
      <con:name>vehicleFilesPath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\vehicle-files</con:value>
    </con:property>
    <con:property>
      <con:name>vehicleConfigurationFilePath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\vehicle-files\VehicleConfiguration.json</con:value>
    </con:property>
    <con:property>
      <con:name>vcHash</con:name>
      <con:value>9A447C07721D0D503E0F3FDF41E61B19EBA59EFE0885D1F2990E1B3B72E61905</con:value>
    </con:property>
    <con:property>
      <con:name>vehicleManifestFilePath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\vehicle-files\VehicleManifest.json</con:value>
    </con:property>
    <con:property>
      <con:name>configurationManifestFilePath</con:name>
      <con:value>C:\InTechProjects\backend_integration\orunext-backend\OTA-19177\OTA-19176\vehicle-files\ConfManifest_0075.json</con:value>
    </con:property>
    <con:property>
      <con:name>updateId</con:name>
      <con:value>adebce92-aa7c-482a-82a8-bb2940938bb0</con:value>
    </con:property>
    <con:property>
      <con:name>configurationHash</con:name>
      <con:value>9A447C07721D0D503E0F3FDF41E61B19EBA59EFE0885D1F2990E1B3B72E61905</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:environmentSpec>
    <con:entry environmentId="19d15dbe-9720-4a73-b417-71308b8db01e">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tagId>3d4084cd-49eb-472a-922f-59b9af4b8ae1</con:tagId>
</con:testCase>
