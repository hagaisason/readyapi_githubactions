{
  "$schema": "http://json-schema.org/draft/2019-09/schema#",
  "title": "Schema Vehicle Manifest",
  "schemaVersion": "2.4.0",
  "type": "object",
  "properties": {
    "modulVersion": {
      "type": "string",
      "description": "Softwareversion Vehicle Manifest Generator."
    },
    "modulResult": {
      "type": "boolean",
      "description": "Describes if the VehicleManifest was created without errors."
    },
    "scheme": {
      "type": "string",
      "description": "scheme file name."
    },
    "manifestImplementationVersion": {
      "type": "string",
      "description": "Version of the requirement specification."
    },
    "manifestName": {
      "type": "string",
      "description": "Vehicle Manifest name."
    },
    "manifestFileVersion": {
      "type": "string",
      "description": "Vehicle Manifest file version."
    },
    "requestId": {
      "type": "string",
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
      "description": "Request ID derived from the VIN, generated by the orchestrator."
    },
    "description": {
      "type": "string",
      "description": "Vehicle Manifest description."
    },
    "blPartNumber": {
      "type": "string",
      "description": "partNumber of Target Baseline."
    },
    "blRevision": {
      "type": "string",
      "description": "revision number information of Target Baseline."
    },
    "vcHash": {
      "type": "string",
      "description": "Required Vehicle Configuration Checksum from DiagAssemblyState."
    },
    "useCase": {
      "type": "string",
      "description": "Optional attribute for useCase specific requirements."
    },
    "checkMap": {
      "description": "Optional information only provided by and required by Porsche production orchestrator.This parameter is only passed through, the input determines the content and type."
    },
    "amCode": {
      "type": "string",
      "description": "Optional information only provided by and required by Audi afterSales orchestrator."
    },
    "uuids": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/sourceUuidReference"
      }
    },
    "updateMap": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "id of the object. Must be unique (updateMap, updateBlocks, updateItems, actions all share this attribute)"
        },
        "updateType": {
          "enum": [
            "sequential"
          ],
          "description": "Describes if the contained updateItems / updateBlocks are to be processed sequentially or parallel."
        },
        "updateItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/updateMapElement"
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "id",
        "updateType",
        "updateItems"
      ],
      "description": "Lists the update blocks."
    }
  },
  "required": [
    "requestId",
    "scheme",
    "vcHash",
    "updateMap"
  ],
  "additionalProperties": false,
  "definitions": {
    "updateMapElement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "id of the object. Must be unique (updateMap, updateBlocks, updateItems, actions all share this attribute)"
        },
        "elementType": {
          "enum": [
            "updateBlock",
            "updateItem",
            "updateControlItem"
          ],
          "description": "Type of this updateMapElement."
        },
        "updateBlock": {
          "$ref": "#/definitions/updateBlockDef"
        },
        "updateItem": {
          "$ref": "#/definitions/updateItem"
        },
        "updateControlItem": {
          "$ref": "#/definitions/updateControlItem"
        }
      },
      "allOf": [
        {
          "required": [
            "id",
            "elementType"
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "updateBlock"
              ]
            },
            {
              "required": [
                "updateItem"
              ]
            },
            {
              "required": [
                "updateControlItem"
              ]
            }
          ]
        }
      ],
      "additionalProperties": false,
      "description": "Element in the first level of the update map"
    },
    "updateElement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "id of the object. Must be unique (updateMap, updateBlocks, updateItems, actions all share this attribute)"
        },
        "elementType": {
          "enum": [
            "updateBlock",
            "updateItem"
          ],
          "description": "Type of this updateElement."
        },
        "updateBlock": {
          "$ref": "#/definitions/updateBlockDef"
        },
        "updateItem": {
          "$ref": "#/definitions/updateItem"
        }
      },
      "allOf": [
        {
          "required": [
            "id",
            "elementType"
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "updateBlock"
              ]
            },
            {
              "required": [
                "updateItem"
              ]
            }
          ]
        }
      ],
      "additionalProperties": false,
      "description": "Element in level 2 (and deeper levels) of the updateMap."
    },
    "updateBlockDef": {
      "type": "object",
      "properties": {
        "updateType": {
          "enum": [
            "sequential",
            "parallel"
          ],
          "description": "Describes if the contained updateItems / updateBlocks are to be processed sequentially or parallel."
        },
        "updateItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/updateElement"
          }
        }
      },
      "required": [
        "updateType"
      ],
      "additionalProperties": false,
      "description": "One block containing other updateBlocks or updateItems in parallel or sequential order."
    },
    "updateControlItem": {
      "type": "object",
      "properties": {
        "elementType": {
          "enum": [
            "preProgramming",
            "postProgramming"
          ],
          "description": "Type of updateControlItem. preProgramming or postProgramming"
        }
      },
      "required": [
        "elementType"
      ]
    },
    "updateItem": {
      "type": "object",
      "properties": {
        "diagnosisAddress": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{4}$",
          "description": "Diagnosis Address."
        },
        "dataType": {
          "enum": [
            "PROG",
            "CONF",
            "RES",
            "WAIT"
          ],
          "description": "Select action - Program, Configure, Reset, Wait."
        },
        "progInformation": {
          "$ref": "#/definitions/progInformation"
        },
        "confInformation": {
          "$ref": "#/definitions/confInformation"
        },
        "resInformation": {
          "$ref": "#/definitions/resInformation"
        },
        "waitInformation": {
          "$ref": "#/definitions/waitInformation"
        },
        "retries": {
          "type": "integer",
          "description": "Number of retries on update fail before giving up."
        },
        "subSystemNodeAddress": {
          "type": "string",
          "description": "tbd"
        },
        "preActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/action"
          },
          "description": "Actions that are to be executed before this updateItem is processed."
        },
        "postActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/action"
          },
          "description": "Actions that are to be executed after this updateItem is processed."
        },
        "sequenceControl": {
          "type": "object",
          "properties": {
            "skipTo": {
              "type": "integer",
              "description": "Skip to this id after current updateItem."
            },
            "executeOnlyByPreResult": {
              "type": "string",
              "description": "Only process this updateItem if ruleset is true."
            },
            "continueOnFailure": {
              "type": "boolean",
              "description": "Continue processing updateOrder if this updateItem fails"
            }
          }
        }
      },
      "allOf": [
        {
          "required": [
            "diagnosisAddress",
            "dataType"
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "progInformation"
              ]
            },
            {
              "required": [
                "confInformation"
              ]
            },
            {
              "required": [
                "resInformation"
              ]
            },
            {
              "required": [
                "waitInformation"
              ]
            }
          ]
        }
      ],
      "additionalProperties": false,
      "description": "A single node to update"
    },
    "DataFile": {
      "type": "object",
      "properties": {
        "blockFileName": {
          "type": "string",
          "description": "Name of sw-block to be downloaded by ORU"
        },
        "blockNo": {
          "type": "string",
          "description": "Number of sw-block to be downloaded by ORU"
        },
        "blockVersion": {
          "type": "string",
          "description": "Version of sw-block to be downloaded by ORU"
        },
        "blockInstallationTime": {
          "type": "number",
          "description": "Installation Duration per BIN file in ms"
        },
        "blockFileSize": {
          "type": "number",
          "description": "in MB rounded up to the next MB"
        }
      },
      "additionalProperties": false,
      "description": "reference to the update file"
    },
    "validVersionMappingProg": {
      "type": "object",
      "properties": {
        "partNumber": {
          "type": "string",
          "description": "Current SW Part Number."
        },
        "softwareVersion": {
          "type": "string",
          "pattern": "^[0-9a-zA-Z]{4}$",
          "description": "Current SW Version."
        },
        "hardwarePartNumber": {
          "type": "string",
          "description": "Current HW PartNumber."
        },
        "hardwareVersion": {
          "type": "string",
          "description": "Current HW Version."
        },
        "odxSessionShortName": {
          "type": "string",
          "description": "ODX SessionID."
        },
        "flashSetupTime": {
          "type": "number",
          "description": "Time to flash the node in ms"
        },
        "metaFile": {
          "type": "string",
          "description": "Filename of flashcontainer"
        },
        "softwareProtectionType": {
          "enum": [
            "SERIES",
            "DEVELOPMENT",
            "NO_PROTECTION"
          ],
          "description": "softwareProtectionType of the flashcontainer"
        },
        "documentIdV42": {
          "type": "string",
          "description": "Version 42 documentId of the flashcontainer"
        },
        "dataFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFile"
          }
        }
      },
      "required": [
        "metaFile",
        "softwareProtectionType"
      ],
      "additionalProperties": true,
      "description": "Contents of validVersionMapping (current state) for Prog-updateItems"
    },
    "validVersionMappingConf": {
      "type": "object",
      "properties": {
        "partNumber": {
          "type": "string",
          "description": "Current SW Part Number."
        },
        "softwareVersion": {
          "type": "string",
          "pattern": "^[0-9a-zA-Z]{4}$",
          "description": "Current SW Version."
        },
        "hardwarePartNumber": {
          "type": "string",
          "description": "Current HW PartNumber."
        },
        "hardwareVersion": {
          "type": "string",
          "description": "Current HW Version."
        },
        "confManifest": {
          "type": "string",
          "description": "Reference to ConfManifest per DA"
        }
      },
      "required": [
        "confManifest"
      ],
      "additionalProperties": false,
      "description": "Contents of validVersionMapping (current state) for Conf-updateItems"
    },
    "targetVersions": {
      "type": "object",
      "properties": {
        "partNumber": {
          "type": "string",
          "description": "Target SW Part Number."
        },
        "softwareVersion": {
          "type": "string",
          "pattern": "^[0-9a-zA-Z]{4}$",
          "description": "Target SW Version."
        },
        "hardwarePartNumber": {
          "type": "string",
          "description": "Target HW PartNumber."
        },
        "hardwareVersion": {
          "type": "string",
          "description": "Target HW Version."
        },
        "ivdProgTarget": {
          "type": "string",
          "description": "Target Integrity Validation Data Programming."
        }
      },
      "required": [
        "partNumber",
        "softwareVersion"
      ],
      "additionalProperties": false,
      "description": "Contents of targetVersions (target state)"
    },
    "progInformation": {
      "type": "object",
      "properties": {
        "sgvType": {
          "type": "string",
          "minLength": 2,
          "maxLength": 3,
          "description": ""
        },
        "law": {
          "type": "string",
          "description": "Key used to identify which LUM-Slaves belong to which LUM-Master",
          "pattern": "^[A-Z0-9]{2}[#+\/]?$"
        },
        "ecuType": {
          "enum": [
            "LUM",
            "LUM-Client",
            "ICAS-Host",
            "ICAS-Slave",
            "UDS (ohne ICAS)",
            "UFS",
            "andere",
            null
          ],
          "description": ""
        },
        "obdRelevance": {
          "type": "boolean",
          "description": "Is this updateItem obd-relevant?"
        },
        "ivdRelevance": {
          "type": "boolean",
          "description": "Is this updateItem ivd-relevant?"
        },
        "diagnosisClass": {
          "type": "string",
          "minLength": 3,
          "maxLength": 4,
          "description": "Diagnosis class of the diagnosis Address"
        },
        "diagnosisAddressMaster": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{4}$",
          "description": "diagnosisAddress of the Master"
        },
        "lumAddressMaster": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{4}$",
          "description": "diagnosisAddress of the LUM-Master"
        },
        "internalUpdateOrderFilename": {
          "type": "string",
          "description": "InternalUpdateOrder for LUM Master"
        },
        "wfsType": {
          "type": "string",
          "minLength": 1,
          "maxLength": 4,
          "description": "Type of Wegfahrsperre (vehicle immobiliser)"
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Sum of flashSetupTime and all blockInstallationTimes in ms. Provided by VehicleUpdateOrder"
        },
        "ambiguityCause": {
          "enum": [
            "hardware",
            "signature",
            "hardware and signature"
          ],
          "description": "Reason for output of more than 1 validVersionMapping. Either hardware or flashcontainer signature"
        },
        "targetVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/targetVersions"
          },
          "minItems": 1
        },
        "validVersionMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/validVersionMappingProg"
          },
          "minItems": 1
        }
      },
      "required": [
        "ecuType",
        "ivdRelevance",
        "obdRelevance"
      ],
      "additionalProperties": false,
      "description": "Object containing all attributes for updateItems with datatype==PROG"
    },
    "confInformation": {
      "type": "object",
      "properties": {
        "validVersionMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/validVersionMappingConf"
          },
          "minItems": 1
        },
        "obdRelevance": {
          "type": "boolean",
          "description": "Is this updateItem obd-relevant?"
        },
        "wfsType": {
          "type": "string",
          "minLength": 1,
          "maxLength": 4,
          "description": "type of Wegfahrsperre (vehicle immobiliser)"
        },
        "ivdRelevance": {
          "type": "boolean",
          "description": "Is this updateItem ivd-relevant?"
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of the Action defined by dataType in ms"
        }
      },
      "required": [
        "validVersionMapping"
      ],
      "additionalProperties": false,
      "description": "Object containing all attributes for updateItems with datatype==CONF"
    },
    "resInformation": {
      "type": "object",
      "properties": {
        "resType": {
          "enum": [
            "SOFT",
            "HARD"
          ],
          "description": "Select Type of reset."
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of the Action defined by dataType in ms"
        }
      },
      "required": [
        "resType"
      ],
      "additionalProperties": false,
      "description": "Object containing all attributes for updateItems with datatype==RES"
    },
    "waitInformation": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of wait on this DA in ms"
        }
      },
      "required": [
        "duration"
      ],
      "additionalProperties": false,
      "description": "Object containing all attributes for updateItems with datatype==WAIT"
    },
    "action": {
      "type": "object",
      "properties": {
        "actionType": {
          "enum": [
            "otx",
            "sfdUnlock",
            "wakeup",
            "reset",
            "wait",
            "crc"
          ],
          "description": "Type of pre-/postAction"
        },
        "id": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "id of the object. Must be unique (updateMap, updateBlocks, updateItems, actions all share this attribute)"
        },
        "retries": {
          "type": "integer",
          "description": "Number of retries on update fail before giving up."
        },
        "otxAction": {
          "$ref": "#/definitions/otxAction"
        },
        "sfdUnlockAction": {
          "$ref": "#/definitions/sfdUnlockAction"
        },
        "wakeupAction": {
          "$ref": "#/definitions/wakeupAction"
        },
        "resetAction": {
          "$ref": "#/definitions/resetAction"
        },
        "waitAction": {
          "$ref": "#/definitions/waitAction"
        },
        "crcAction": {
          "$ref": "#/definitions/crcAction"
        }
      },
      "allOf": [
        {
          "required": [
            "actionType",
            "id"
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "otxAction"
              ]
            },
            {
              "required": [
                "sfdUnlockAction"
              ]
            },
            {
              "required": [
                "wakeupAction"
              ]
            },
            {
              "required": [
                "resetAction"
              ]
            },
            {
              "required": [
                "waitAction"
              ]
            },
            {
              "required": [
                "crcAction"
              ]
            }
          ]
        }
      ],
      "additionalProperties": false,
      "description": "Pre- or postAction that is executed between two udpateItems."
    },
    "otxAction": {
      "type": "object",
      "properties": {
        "idRef": {
          "type": "string",
          "description": "reference to the filename of a specific otx file from the Testerdatenpaket"
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of the action in ms"
        }
      },
      "required": [
        "idRef"
      ],
      "description": "Object containing all attributes for otxActions"
    },
    "sfdUnlockAction": {
      "type": "object",
      "properties": {
        "sfdUnlockToken": {
          "type": "string",
          "description": "SFD1-Token for sfdUnlock"
        },
        "diagnosisAddress": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{4}$",
          "description": "Diagnosis Address for sfdUnlock"
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of the action in ms"
        }
      },
      "required": [
        "sfdUnlockToken",
        "diagnosisAddress"
      ],
      "description": "Object containing all attributes for sfdUnlockActions"
    },
    "wakeupAction": {
      "type": "object",
      "properties": {
        "wakeupType": {
          "enum": [
            "wakeUpCar",
            "wakeUpCluster",
            "wakeUpCarOff",
            "wakeUpClusterOff"
          ],
          "description": "Type of wakeUp"
        },
        "diagnosisAddress": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{4}$",
          "description": "Diagnosis Address of cluster to wake up"
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of the action in ms"
        }
      },
      "required": [
        "wakeupType"
      ],
      "description": "Object containing all attributes for wakeupActions"
    },
    "resetAction": {
      "type": "object",
      "properties": {
        "resType": {
          "enum": [
            "SOFT",
            "HARD"
          ],
          "description": "Select type of reset."
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of the action in ms"
        }
      },
      "required": [
        "resType"
      ],
      "description": "Object containing all attributes for resetActions"
    },
    "waitAction": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of wait in ms"
        }
      },
      "required": [
        "duration"
      ],
      "description": "Object containing all attributes for waitActions"
    },
    "crcAction": {
      "type": "object",
      "properties": {
        "manifest": {
          "type": "string",
          "description": "crc-manifest"
        },
        "signature": {
          "type": "string",
          "description": "crc-signature"
        },
        "fusiTransferDA": {
          "type": "boolean",
          "description": "flag for crcPreAction"
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of the action in ms"
        }
      },
      "description": "Object containing all attributes for crcActions",
      "oneOf": [
        {
          "required": [
            "fusiTransferDA"
          ]
        },
        {
          "required": [
            "manifest"
          ]
        }
      ]
    },
    "sourceUuidReference": {
      "type": "object",
      "properties": {
        "sourceSystem": {
          "type": "string"
        },
        "sourceType": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "required": [
        "sourceSystem",
        "sourceType",
        "uuid"
      ]
    }
  }
}